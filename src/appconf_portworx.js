const portworxConfig = {
  errCode: 0,
  errMsg: null,
  hash: null,
  id: 'library-portworx-1.0.0',
  annotations: null,
  appReadme: null,
  created: '2019-01-27T06:15:57Z',
  creatorId: null,
  digest: '5971dda0da43917e2b5a78f4ad736eab',
  externalId: 'catalog://?catalog=library&template=portworx&version=1.0.0',
  files: {
    'portworx/Chart.yaml':
        'bmFtZTogcG9ydHdvcngKYXBwVmVyc2lvbjogMS4wLjAKdmVyc2lvbjogMS4wLjAKZGVzY3JpcHRpb246IEEgSGVsbSBjaGFydCBmb3IgaW5zdGFsbGluZyBQb3J0d29yeCBvbiBLdWJlcm5ldGVzLgprZXl3b3JkczoKICAtIFN0b3JhZ2UKICAtIElDUAogIC0gcGVyc2lzdGVudCBkaXNrCiAgLSBwdmMKICAtIGNsb3VkIG5hdGl2ZSBzdG9yYWdlCiAgLSBwZXJzaXN0ZW50IHN0b3JhZ2UKICAtIHBvcnR3b3J4CiAgLSBhbWQ2NApob21lOiBodHRwczovL3BvcnR3b3J4LmNvbS8KbWFpbnRhaW5lcnM6CiAgLSBuYW1lOiBoYXJzaC1weAogICAgZW1haWw6IGhhcnNoQHBvcnR3b3J4LmNvbQpzb3VyY2VzOgogIC0gaHR0cHM6Ly9naXRodWIuY29tL3BvcnR3b3J4L2hlbG0KaWNvbjogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3BvcnR3b3J4L2hlbG0vbWFzdGVyL2RvYy9tZWRpYS9rOHMtcG9yeC5wbmcK',
    'portworx/README.md':
        'IyBQb3J0d29yeAoKIyMgUHJlLXJlcXVpc2l0ZXMKClRoaXMgaGVsbSBjaGFydCBkZXBsb3lzIFtQb3J0d29yeF0oaHR0cHM6Ly9wb3J0d29yeC5jb20vKSBhbmQgW1N0b3JrXShodHRwczovL2RvY3MucG9ydHdvcnguY29tL3NjaGVkdWxlci9rdWJlcm5ldGVzL3N0b3JrLmh0bWwpIG9uIHlvdXIgS3ViZXJuZXRlcyBjbHVzdGVyLiBUaGUgbWluaW11bSByZXF1aXJlbWVudHMgZm9yIGRlcGxveWluZyB0aGUgaGVsbSBjaGFydCBhcmUgYXMgZm9sbG93czoKCi0gQWxsIFtQcmUtcmVxdWlzaXRlc10oaHR0cHM6Ly9kb2NzLnBvcnR3b3J4LmNvbS9zY2hlZHVsZXIva3ViZXJuZXRlcy9pbnN0YWxsLmh0bWwjcHJlcmVxdWlzaXRlcykgZm9yIFBvcnR3b3J4IG11c3QgYmUgZnVsZmlsbGVkLgoKIyMgTGltaXRhdGlvbnMKKiBUaGUgcG9ydHdvcnggaGVsbSBjaGFydCBjYW4gb25seSBiZSBkZXBsb3llZCBpbiB0aGUga3ViZS1zeXN0ZW0gbmFtZXNwYWNlLiBIZW5jZSB1c2UgImt1YmUtc3lzdGVtIiBpbiB0aGUgIlRhcmdldCBuYW1lc3BhY2UiIGR1cmluZyBjb25maWd1cmF0aW9uLgoqIFlvdSBjYW4gb25seSBkZXBsb3kgb25lIHBvcnR3b3J4IGhlbG0gY2hhcnQgcGVyIEt1YmVybmV0ZXMgY2x1c3Rlci4KCiMjIFVuaW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIHVuaW5zdGFsbC9kZWxldGUgdGhlIGBteS1yZWxlYXNlYCBkZXBsb3ltZW50OgoKPiAqKlRpcCoqID4gVGhlIFBvcnR3b3J4IGNvbmZpZ3VyYXRpb24gZmlsZXMgdW5kZXIgYC9ldGMvcHd4L2AgZGlyZWN0b3J5IGFyZSBwcmVzZXJ2ZWQsIGFuZCB3aWxsIG5vdCBiZSBkZWxldGVkLgoKYGBgCmhlbG0gZGVsZXRlIG15LXJlbGVhc2UKYGBgClRoZSBjb21tYW5kIHJlbW92ZXMgYWxsIHRoZSBLdWJlcm5ldGVzIGNvbXBvbmVudHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBjaGFydCBhbmQgZGVsZXRlcyB0aGUgcmVsZWFzZS4KCgojIyBEb2N1bWVudGF0aW9uCiogW1BvcnR3b3J4IGRvY3Mgc2l0ZV0oaHR0cHM6Ly9kb2NzLnBvcnR3b3J4LmNvbS9zY2hlZHVsZXIva3ViZXJuZXRlcy8pCiogW1BvcnR3b3J4IGludGVyYWN0aXZlIHR1dG9yaWFsc10oaHR0cHM6Ly9kb2NzLnBvcnR3b3J4LmNvbS9zY2hlZHVsZXIva3ViZXJuZXRlcy9weC1rOHMtaW50ZXJhY3RpdmUuaHRtbCkKCiMjIEluc3RhbGxpbmcgdGhlIENoYXJ0IHVzaW5nIHRoZSBDTEkKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWAgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZHMgc3Vic3RpdHV0aW5nIHJlbGV2YW50IHZhbHVlcyBmb3IgeW91ciBzZXR1cDoKCiMjIyMjIE5PVEU6CmBldGNkRW5kUG9pbnRgIGlzIGEgcmVxdWlyZWQgZmllbGQuIFRoZSBjaGFydCBpbnN0YWxsYXRpb24gd291bGQgbm90IHByb2NlZWQgdW5sZXNzIHRoaXMgb3B0aW9uIGlzIHByb3ZpZGVkLgpJZiB0aGUgZXRjZGNsdXN0ZXIgYmVpbmcgdXNlZCBpcyBhIHNlY3VyZWQgRVRDRCAoU1NML1RMUykgdGhlbiBwbGVhc2UgZm9sbG93IGluc3RydWN0aW9ucyB0byBjcmVhdGUgYSBrdWJlcm5ldGVzIHNlY3JldCB3aXRoIHRoZSBjZXJ0cy4gaHR0cHM6Ly9kb2NzLnBvcnR3b3J4LmNvbS9zY2hlZHVsZXIva3ViZXJuZXRlcy9ldGNkLWNlcnRzLXVzaW5nLXNlY3JldHMuaHRtbCNjcmVhdGUta3ViZXJuZXRlcy1zZWNyZXQKCgpgY2x1c3Rlck5hbWVgIHNob3VsZCBiZSBhIHVuaXF1ZSBuYW1lIGlkZW50aWZ5aW5nIHlvdXIgUG9ydHdvcnggY2x1c3Rlci4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgYG15Y2x1c3RlcmAsIGJ1dCBpdCBpcyBzdWdnZXN0ZWQgdG8gdXBkYXRlIGl0IHdpdGggeW91ciBuYW1pbmcgc2NoZW1lLgoKRXhhbXBsZSBvZiB1c2luZyB0aGUgaGVsbSBDTEkgdG8gaW5zdGFsbCB0aGUgY2hhcnQ6CmBgYApoZWxtIGluc3RhbGwgLS1kZWJ1ZyAtLW5hbWUgbXktcmVsZWFzZSAtLXNldCBldGNkRW5kUG9pbnQ9ZXRjZDpodHRwOi8vMTkyLjE2OC43MC45MDoyMzc5LGNsdXN0ZXJOYW1lPSQodXVpZCkgLi9oZWxtL2NoYXJ0cy9wb3J0d29yeC8KYGBgCgojIyBCYXNpYyB0cm91Ymxlc2hvb3RpbmcKCiMjIyMgSGVsbSBpbnN0YWxsIGVycm9ycyB3aXRoICJubyBhdmFpbGFibGUgcmVsZWFzZSBuYW1lIGZvdW5kIgoKYGBgCmhlbG0gaW5zdGFsbCAtLWRyeS1ydW4gLS1kZWJ1ZyAtLXNldCBldGNkRW5kUG9pbnQ9ZXRjZDpodHRwOi8vMTkyLjE2OC43MC45MDoyMzc5LGNsdXN0ZXJOYW1lPSQodXVpZCkgLi9oZWxtL2NoYXJ0cy9weC8KW2RlYnVnXSBDcmVhdGVkIHR1bm5lbCB1c2luZyBsb2NhbCBwb3J0OiAnMzczMDQnCltkZWJ1Z10gU0VSVkVSOiAiMTI3LjAuMC4xOjM3MzA0IgpbZGVidWddIE9yaWdpbmFsIGNoYXJ0IHZlcnNpb246ICIiCltkZWJ1Z10gQ0hBUlQgUEFUSDogL3Jvb3QvaGVsbS9jaGFydHMvcHgKCkVycm9yOiBubyBhdmFpbGFibGUgcmVsZWFzZSBuYW1lIGZvdW5kCmBgYApUaGlzIG1vc3QgbGlrZWx5IGluZGljYXRlcyB0aGF0IFRpbGxlciBkb2Vzbid0IGhhdmUgdGhlIHJpZ2h0IFJCQUMgcGVybWlzc2lvbnMuCllvdSBjYW4gdmVyaWZ5IHRoZSB0aWxsZXIgbG9ncwpgYGAKW3N0b3JhZ2UvZHJpdmVyXSAyMDE4LzAyLzA3IDA2OjAwOjEzIGdldDogZmFpbGVkIHRvIGdldCAic2luZ2luZy1iaXNvbi52MSI6IGNvbmZpZ21hcHMgInNpbmdpbmctYmlzb24udjEiIGlzIGZvcmJpZGRlbjogVXNlciAic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRlZmF1bHQiIGNhbm5vdCBnZXQgY29uZmlnbWFwcyBpbiB0aGUgbmFtZXNwYWNlICJrdWJlLXN5c3RlbSIKW3RpbGxlcl0gMjAxOC8wMi8wNyAwNjowMDoxMyBpbmZvOiBnZW5lcmF0ZWQgbmFtZSBzaW5naW5nLWJpc29uIGlzIHRha2VuLiBTZWFyY2hpbmcgYWdhaW4uClt0aWxsZXJdIDIwMTgvMDIvMDcgMDY6MDA6MTMgd2FybmluZzogTm8gYXZhaWxhYmxlIHJlbGVhc2UgbmFtZXMgZm91bmQgYWZ0ZXIgNSB0cmllcwpbdGlsbGVyXSAyMDE4LzAyLzA3IDA2OjAwOjEzIGZhaWxlZCBpbnN0YWxsIHByZXBhcmUgc3RlcDogbm8gYXZhaWxhYmxlIHJlbGVhc2UgbmFtZSBmb3VuZApgYGAKCiMjIyMgSGVsbSBpbnN0YWxsIGVycm9ycyB3aXRoICAiSm9iIGZhaWxlZDogQmFja29mZkxpbWl0RXhjZWVkZWQiCgpgYGAKaGVsbSBpbnN0YWxsIC0tZGVidWcgLS1zZXQgZGF0YUludGVyZmFjZT1ldGgxLG1hbmFnZW1lbnRJbnRlcmZhY2U9ZXRoMSxldGNkRW5kUG9pbnQ9ZXRjZDpodHRwOi8vMTkyLjE2OC43MC4xNzk6MjM3OSxjbHVzdGVyTmFtZT0kKHV1aWQpIC4vaGVsbS9jaGFydHMvcHgvCltkZWJ1Z10gQ3JlYXRlZCB0dW5uZWwgdXNpbmcgbG9jYWwgcG9ydDogJzM2Mzg5JwoKW2RlYnVnXSBTRVJWRVI6ICIxMjcuMC4wLjE6MzYzODkiCgpbZGVidWddIE9yaWdpbmFsIGNoYXJ0IHZlcnNpb246ICIiCltkZWJ1Z10gQ0hBUlQgUEFUSDogL3Jvb3QvaGVsbS9jaGFydHMvcHgKCkVycm9yOiBKb2IgZmFpbGVkOiBCYWNrb2ZmTGltaXRFeGNlZWRlZApgYGAKVGhpcyBtb3N0IGxpa2VseSBpbmRpY2F0ZXMgdGhhdCB0aGUgcHJlLWluc3RhbGwgaG9vayBmb3IgdGhlIGhlbG0gY2hhcnQgaGFzIGZhaWxlZCBkdWUgdG8gYSBtaXNjb25maWd1cmVkIG9yIGluYWNjZXNzaWJsZSBFVENEIHVybC4KRm9sbG93IHRoZSBiZWxvdyBzdGVwcyB0byBjaGVjayB0aGUgcmVhc29uIGZvciBmYWlsdXJlLgoKYGBgCmt1YmVjdGwgZ2V0IHBvZHMgLW5rdWJlLXN5c3RlbSAtYSB8IGdyZXAgcHJlaW5zdGFsbApweC1ldGNkLXByZWluc3RhbGwtaG9vay1oeHZtYiAgIDAvMSAgICAgICBFcnJvciAgICAgMCAgICAgICAgICA1N3MKCmt1YmVjdGwgbG9ncyBwby9weC1ldGNkLXByZWluc3RhbGwtaG9vay1oeHZtYiAtbmt1YmUtc3lzdGVtCkluaXRpYWxpemluZy4uLgpWZXJpZnlpbmcgaWYgdGhlIHByb3ZpZGVkIGV0Y2QgdXJsIGlzIGFjY2Vzc2libGU6IGh0dHA6Ly8xOTIuMTY4LjcwLjE3OToyMzc5ClJlc3BvbnNlIENvZGU6IDAwMApJbmNvcnJlY3QgRVRDRCBVUkwgcHJvdmlkZWQuIEl0IGlzIGVpdGhlciBub3QgcmVhY2hhYmxlIG9yIGlzIGluY29ycmVjdC4uLgoKYGBgCgpFbnN1cmUgdGhlIGNvcnJlY3QgZXRjZCBVUkwgaXMgc2V0IGFzIGEgcGFyYW1ldGVyIHRvIHRoZSBgaGVsbSBpbnN0YWxsYCBjb21tYW5kLgoKIyMjIyBIZWxtIGluc3RhbGwgZXJyb3JzIHdpdGggIkpvYiBmYWlsZWQ6IERlYWRsaW5lIGV4Y2VlZGVkIgoKYGBgCmhlbG0gaW5zdGFsbCAtLWRlYnVnIC0tc2V0IGRhdGFJbnRlcmZhY2U9ZXRoMSxtYW5hZ2VtZW50SW50ZXJmYWNlPWV0aDEsZXRjZEVuZFBvaW50PWV0Y2Q6aHR0cDovLzE5Mi4xNjguMjAuMjkwOjIzNzksY2x1c3Rlck5hbWU9JCh1dWlkKSAuL2NoYXJ0cy9weC8KW2RlYnVnXSBDcmVhdGVkIHR1bm5lbCB1c2luZyBsb2NhbCBwb3J0OiAnMzk3NzEnCgpbZGVidWddIFNFUlZFUjogIjEyNy4wLjAuMTozOTc3MSIKCltkZWJ1Z10gT3JpZ2luYWwgY2hhcnQgdmVyc2lvbjogIiIKW2RlYnVnXSBDSEFSVCBQQVRIOiAvcm9vdC9oZWxtL2NoYXJ0cy9weAoKRXJyb3I6IEpvYiBmYWlsZWQ6IERlYWRsaW5lRXhjZWVkZWQKYGBgClRoaXMgZXJyb3IgaW5kaWNhdGVzIHRoYXQgdGhlIHByZS1pbnN0YWxsIGhvb2sgZm9yIHRoZSBoZWxtIGNoYXJ0IGhhcyBmYWlsZWQgdG8gcnVuIHRvIGNvbXBsZXRpb24gY29ycmVjdGx5LiBWZXJpZnkgdGhhdCB0aGUgZXRjZCBVUkwgaXMgYWNjZXNzaWJsZS4gVGhpcyBlcnJvciBvY2N1cnMgb24ga3ViZXJuZXRlcyBjbHVzdGVyKHMpIHdpdGggdmVyc2lvbiBiZWxvdyAxLjgKRm9sbG93IHRoZSBiZWxvdyBzdGVwcyB0byBjaGVjayB0aGUgcmVhc29uIGZvciBmYWlsdXJlLgoKYGBgCmt1YmVjdGwgZ2V0IHBvZHMgLW5rdWJlLXN5c3RlbSAtYSB8IGdyZXAgcHJlaW5zdGFsbApweC1ob29rLWV0Y2QtcHJlaW5zdGFsbC1kem1rbCAgICAwLzEgICAgICAgRXJyb3IgICAgIDAgICAgICAgICAgNm0KcHgtaG9vay1ldGNkLXByZWluc3RhbGwtbmxxd2wgICAgMC8xICAgICAgIEVycm9yICAgICAwICAgICAgICAgIDZtCnB4LWhvb2stZXRjZC1wcmVpbnN0YWxsLW5zanJqICAgIDAvMSAgICAgICBFcnJvciAgICAgMCAgICAgICAgICA1bQpweC1ob29rLWV0Y2QtcHJlaW5zdGFsbC1yOWdteiAgICAwLzEgICAgICAgRXJyb3IgICAgIDAgICAgICAgICAgNm0KCmt1YmVjdGwgbG9ncyBwby9weC1ob29rLWV0Y2QtcHJlaW5zdGFsbC1kem1rbCAtbmt1YmUtc3lzdGVtCkluaXRpYWxpemluZy4uLgpWZXJpZnlpbmcgaWYgdGhlIHByb3ZpZGVkIGV0Y2QgdXJsIGlzIGFjY2Vzc2libGU6IGh0dHA6Ly8xOTIuMTY4LjIwLjI5MDoyMzc5ClJlc3BvbnNlIENvZGU6IDAwMApJbmNvcnJlY3QgRVRDRCBVUkwgcHJvdmlkZWQuIEl0IGlzIGVpdGhlciBub3QgcmVhY2hhYmxlIG9yIGlzIGluY29ycmVjdC4uLgpgYGAKRW5zdXJlIHRoZSBjb3JyZWN0IGV0Y2QgVVJMIGlzIHNldCBhcyBhIHBhcmFtZXRlciB0byB0aGUgYGhlbG0gaW5zdGFsbGAgY29tbWFuZC4K',
    'portworx/app-readme.md':
        'IyBQb3J0d29yeAoKW1BvcnR3b3J4XShodHRwczovL3BvcnR3b3J4LmNvbS8pIGlzIGEgc29mdHdhcmUgZGVmaW5lZCBwZXJzaXN0ZW50IHN0b3JhZ2Ugc29sdXRpb24gZGVzaWduZWQgYW5kIHB1cnBvc2UgYnVpbHQgZm9yIGFwcGxpY2F0aW9ucyBkZXBsb3llZCBhcyBjb250YWluZXJzLCB2aWEgY29udGFpbmVyIG9yY2hlc3RyYXRvcnMgc3VjaCBhcyBLdWJlcm5ldGVzLCBNYXJhdGhvbiBhbmQgU3dhcm0uIEl0IGlzIGEgY2x1c3RlcmVkIGJsb2NrIHN0b3JhZ2Ugc29sdXRpb24gYW5kIHByb3ZpZGVzIGEgQ2xvdWQtTmF0aXZlIGxheWVyIGZyb20gd2hpY2ggY29udGFpbmVyaXplZCBzdGF0ZWZ1bCBhcHBsaWNhdGlvbnMgcHJvZ3JhbW1hdGljYWxseSBjb25zdW1lIGJsb2NrLCBmaWxlIGFuZCBvYmplY3Qgc3RvcmFnZSBzZXJ2aWNlcyBkaXJlY3RseSB0aHJvdWdoIHRoZSBzY2hlZHVsZXIuCg==',
    'portworx/questions.yml':
        'Y2F0ZWdvcmllczoKLSBzdG9yYWdlCm5hbWVzcGFjZToga3ViZS1zeXN0ZW0KbGFiZWxzOgogIGlvLnJhbmNoZXIuY2VydGlmaWVkOiBwYXJ0bmVyCnF1ZXN0aW9uczoKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIEtWREIgb3B0aW9ucyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwotIHZhcmlhYmxlOiBpbnRlcm5hbEtWREIKICBkZXNjcmlwdGlvbjogIlNlbGVjdCBpZiB5b3Ugd2lzaCB0byBydW4gaW50ZXJuYWwga3ZkYi4gTm90ZSBpbnRlcm5hbCBrdmRiIGlzIGluIGJldGEuIERPIE5PVCBlbmFibGUgaW50ZXJuYWwga3ZkYiB3aGVuIHJ1bm5pbmcgd2l0aCBLT1BTLiBUaGUga3ZkYiBlbmRwb2ludHMgcHJvdmlkZWQgYWJvdmUgd2lsbCBiZSBpZ25vcmVkLiIKICB0eXBlOiBib29sZWFuCiAgbGFiZWw6IEVuYWJsZSBJbnRlcm5hbCBLVkRCIHN0b3JlCiAgZGVmYXVsdDogZmFsc2UKICBncm91cDogIktleSB2YWx1ZSBzdG9yZSBwYXJhbWV0ZXJzIChSZXF1aXJlZCkiCi0gdmFyaWFibGU6IGt2ZGIKICBkZXNjcmlwdGlvbjogIlBvaW50cyB0byB5b3VyIGtleSB2YWx1ZSBzdG9yZSwgc3VjaCBhcyBhbiBldGNkIGNsdXN0ZXIgb3IgYSBjb25zdWwgY2x1c3Rlci4gVXNlIHNlbWljb2xvbiBzZXBhcmF0ZWQgZm9yIG11bHRpcGxlIGVuZHBvaW50cy4gKGV4YW1wbGU6IGV0Y2Q6aHR0cDovL2V0Y2QtMS5jb20ubmV0OjIzNzk7ZXRjZDpodHRwOi8vZXRjZC0yLmNvbS5uZXQ6MjM3OTtldGNkOmh0dHA6Ly9ldGNkLTMuY29tLm5ldDoyMzc5KSIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogIkVuZHBvaW50IGFkZHJlc3MiCiAgcmVxdWlyZWQ6IHRydWUKICBzaG93X2lmOiAiaW50ZXJuYWxLVkRCPWZhbHNlIgogIGdyb3VwOiAiS2V5IHZhbHVlIHN0b3JlIHBhcmFtZXRlcnMgKFJlcXVpcmVkKSIKLSB2YXJpYWJsZTogZXRjZC5jYQogIGRlc2NyaXB0aW9uOiAiTmFtZSBvZiBDQSBmaWxlIGZvciBFVENEIGF1dGhlbnRpY2F0aW9uLiBFeGFtcGxlOiBldGNkLWNhLmNydC4gRm9sbG93IGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvZXRjZC1jZXJ0cy11c2luZy1zZWNyZXRzLmh0bWwgdG8gY3JlYXRlIGEgS3ViZXJuZXRlcyBzZWNyZXQgZm9yIHRoZSBldGNkIGNlcnRzLiIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogIkVUQ0QgQ0EgZmlsZSIKICBncm91cDogIktleSB2YWx1ZSBzdG9yZSBzZWN1cml0eSBQYXJhbWV0ZXJzIgogIHNob3dfaWY6ICJpbnRlcm5hbEtWREI9ZmFsc2UiCi0gdmFyaWFibGU6IGV0Y2QuY2VydAogIGRlc2NyaXB0aW9uOiAiTmFtZSBvZiBjZXJ0aWZpY2F0ZSBmb3IgRVRDRCBhdXRoZW50aWNhdGlvbi4gRXhhbXBsZTogZXRjZC5jcnQiCiAgdHlwZTogc3RyaW5nCiAgbGFiZWw6ICJFVENEIGNlcnQgZmlsZSIKICBncm91cDogIktleSB2YWx1ZSBzdG9yZSBzZWN1cml0eSBQYXJhbWV0ZXJzIgogIHNob3dfaWY6ICJpbnRlcm5hbEtWREI9ZmFsc2UiCi0gdmFyaWFibGU6IGV0Y2Qua2V5CiAgZGVzY3JpcHRpb246ICJOYW1lIG9mIGNlcnRpZmljYXRlIGtleSBmb3IgRVRDRCBhdXRoZW50aWNhdGlvbiBFeGFtcGxlOiBldGNkLmtleSIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogIkVUQ0QgY2VydCBrZXkgZmlsZSIKICBncm91cDogIktleSB2YWx1ZSBzdG9yZSBzZWN1cml0eSBQYXJhbWV0ZXJzIgogIHNob3dfaWY6ICJpbnRlcm5hbEtWREI9ZmFsc2UiCi0gdmFyaWFibGU6IGV0Y2QuY3JlZGVudGlhbHMKICBkZXNjcmlwdGlvbjogIlVzZXJuYW1lIGFuZCBwYXNzd29yZCBmb3IgRVRDRCBhdXRoZW50aWNhdGlvbiBpbiB0aGUgZm9ybSB1c2VyOnBhc3N3b3JkLiBOb3QgbmVlZGVkIGlmIHVzaW5nIGNlcnRpZmljYXRlcy4iCiAgdHlwZTogc3RyaW5nCiAgbGFiZWw6ICJFVENEIGNyZWRlbnRpYWxzIgogIGdyb3VwOiAiS2V5IHZhbHVlIHN0b3JlIHNlY3VyaXR5IFBhcmFtZXRlcnMiCiAgc2hvd19pZjogImludGVybmFsS1ZEQj1mYWxzZSIKLSB2YXJpYWJsZTogY29uc3VsLmFjbAogIGRlc2NyaXB0aW9uOiAiQUNMIHRva2VuIHZhbHVlIHVzZWQgZm9yIENvbnN1bCBhdXRoZW50aWNhdGlvbi4gKGV4YW1wbGU6IDM5ODA3M2E4LTUwOTEtNGQ5Yy04NzFhLWJiYmViMDMwZDFmNikuIE5lZWRlZCBvbmx5IGZvciBjb25zdWwuIgogIHR5cGU6IHN0cmluZwogIGdyb3VwOiAiS2V5IHZhbHVlIHN0b3JlIHNlY3VyaXR5IFBhcmFtZXRlcnMiCiAgbGFiZWw6IENvbnN1bCBBQ0wgVG9rZW4KICBzaG93X2lmOiAiaW50ZXJuYWxLVkRCPWZhbHNlIgoKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIFN0b3JhZ2Ugb3B0aW9ucyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwotIHZhcmlhYmxlOiBkcml2ZXMKICBkZXNjcmlwdGlvbjogIlRoaXMgaXMgYSAnOycgc2VwZXJhdGVkIGxpc3Qgb2YgZHJpdmVzLiBGb3IgZWc6ICcvZGV2L3NkYTsvZGV2L3NkYjsvZGV2L3NkYycuIElmIGxlZnQgZW1wdHksIFBvcnR3b3J4IHdpbGwgdHJ5IHRvIHVzZSBhdmFpbGFibGUgZHJpdmVzLiIKICBsYWJlbDogIkRyaXZlcyIKICB0eXBlOiBzdHJpbmcKICBncm91cDogIlN0b3JhZ2UgUGFyYW1ldGVycyIKLSB2YXJpYWJsZTogdXNlZmlsZVN5c3RlbURyaXZlCiAgZGVmYXVsdDogZmFsc2UKICBsYWJlbDogIlVzZSBkcml2ZXMgd2l0aCBhIGZpbGVzeXN0ZW0uIgogIGRlc2NyaXB0aW9uOiAiSW5zdHJ1Y3RzIFBYIHRvIHVzZSBkcml2ZXMgd2l0aCBhIGZpbGVzeXN0ZW0uIgogIHR5cGU6IGJvb2xlYW4KICBncm91cDogIlN0b3JhZ2UgUGFyYW1ldGVycyIKLSB2YXJpYWJsZTogdXNlZHJpdmVzQW5kUGFydGl0aW9ucwogIGRlZmF1bHQ6IGZhbHNlCiAgZGVzY3JpcHRpb246ICJJbnN0cnVjdHMgUFggdG8gdXNlIHVubW91bnRlZCBkcml2ZXMgYW5kIHBhcnRpdGlvbnMuIgogIHR5cGU6IGJvb2xlYW4KICBsYWJlbDogIlVzZSB1bm1vdW50ZWQgZHJpdmVzIGFuZCBwYXJ0aXRpb25zIgogIGdyb3VwOiAiU3RvcmFnZSBQYXJhbWV0ZXJzIgotIHZhcmlhYmxlOiBqb3VybmFsRGV2aWNlCiAgZGVzY3JpcHRpb246ICJUaGlzIGFsbG93cyBQWCB0byBjcmVhdGUgaXTigJlzIG93biBqb3VybmFsIHBhcnRpdGlvbiBvbiB0aGUgYmVzdCBkcml2ZSB0byBhYnNvcmIgUFggbWV0YWRhdGEgd3JpdGVzLiBKb3VybmFsIHdyaXRlcyBhcmUgc21hbGwgd2l0aCBmcmVxdWVudCBzeW5jcyBhbmQgaGVuY2UgYSBzZXBhcmF0ZSBqb3VybmFsIHBhcnRpdGlvbiB3aWxsIGVuYWJsZSBiZXR0ZXIgcGVyZm9ybWFuY2UuIFVzZSB2YWx1ZSAnYXV0bycgaWYgeW91IHdhbnQgUG9ydHdvcnggdG8gY3JlYXRlIGl0J3Mgb3duIGpvdXJuYWwgcGFydGl0aW9uLiIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogIkpvdXJuYWwgRGV2aWNlIgogIGdyb3VwOiAiU3RvcmFnZSBQYXJhbWV0ZXJzIgoKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIE5ldHdvcmsgb3B0aW9ucyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwotIHZhcmlhYmxlOiBkYXRhSW50ZXJmYWNlCiAgZGVzY3JpcHRpb246ICJTcGVjaWZ5IGRhdGEgbmV0d29yayBpbnRlcmZhY2UuIFRoaXMgaXMgdXNlZnVsIGlmIHlvdXIgaW5zdGFuY2VzIGhhdmUgbm9uLXN0YW5kYXJkIG5ldHdvcmsgaW50ZXJmYWNlcy4gKGV4YW1wbGU6IGV0aDEpLiBCeSBkZWZhdWx0LCBQb3J0d29yeCB3aWxsIHNlbGVjdCB0aGUgZmlyc3Qgcm91dGFibGUgaW50ZXJmYWNlLiIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogIkRhdGEgTmV0d29yayBJbnRlcmZhY2UiCiAgZ3JvdXA6ICJOZXR3b3JrIFBhcmFtZXRlcnMiCi0gdmFyaWFibGU6IG1hbmFnZW1lbnRJbnRlcmZhY2UKICBkZXNjcmlwdGlvbjogIlNwZWNpZnkgbWFuYWdlbWVudCBuZXR3b3JrIGludGVyZmFjZS4gVGhpcyBpcyB1c2VmdWwgaWYgeW91ciBpbnN0YW5jZXMgaGF2ZSBub24tc3RhbmRhcmQgbmV0d29yayBpbnRlcmZhY2VzLiAoZXhhbXBsZTogZXRoMSkuIEJ5IGRlZmF1bHQsIFBvcnR3b3J4IHdpbGwgc2VsZWN0IHRoZSBmaXJzdCByb3V0YWJsZSBpbnRlcmZhY2UuPFBhc3RlPiIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogIk1hbmFnZW1lbnQgTmV0d29yayBJbnRlcmZhY2UiCiAgZ3JvdXA6ICJOZXR3b3JrIFBhcmFtZXRlcnMiCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBQbGF0Zm9ybSBvcHRpb25zICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCi0gdmFyaWFibGU6IHBrc0luc3RhbGwKICBkZWZhdWx0OiBmYWxzZQogIGxhYmVsOiAiSW5zdGFsbGluZyBvbiBQaXZvdGFsIENvbnRhaW5lciBTZXJ2aWNlIChQS1MpIgogIGRlc2NyaXB0aW9uOiAiU2VsZWN0IGlmIGluc3RhbGxpbmcgb24gUGl2b3RhbCBDb250YWluZXIgc2VydmljZS4iCiAgdHlwZTogYm9vbGVhbgogIGdyb3VwOiAiUGxhdGZvcm0gUGFyYW1ldGVycyIKLSB2YXJpYWJsZTogQUtTb3JFS1NJbnN0YWxsCiAgZGVmYXVsdDogZmFsc2UKICBsYWJlbDogIkluc3RhbGxpbmcgb24gQUtTIG9yIEVLUyIKICBkZXNjcmlwdGlvbjogIlNlbGVjdCBpZiBpbnN0YWxsaW5nIG9uIEFtYXpvbiBFbGFzdGljIENvbnRhaW5lciBTZXJ2aWNlIGZvciBLdWJlcm5ldGVzIChFS1MpIG9yIEF6dXJlIEt1YmVybmV0ZXMgU2VydmljZSAoQUtTKS4iCiAgdHlwZTogYm9vbGVhbgogIGdyb3VwOiAiUGxhdGZvcm0gUGFyYW1ldGVycyIKLSB2YXJpYWJsZTogaXNUYXJnZXRPU0NvcmVPUwogIGRlZmF1bHQ6IGZhbHNlCiAgbGFiZWw6ICJJbnN0YWxsaW5nIG9uIENvcmVPUyIKICBkZXNjcmlwdGlvbjogIlNlbGVjdCBpZiBpbnN0YWxsaW5nIG9uIENvcmVPUyIKICB0eXBlOiBib29sZWFuCiAgZ3JvdXA6ICJQbGF0Zm9ybSBQYXJhbWV0ZXJzIgoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgUmVnaXN0cnkgc2V0dGluZ3Mgb3B0aW9ucyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwotIHZhcmlhYmxlOiByZWdpc3RyeVNlY3JldAogIGRlc2NyaXB0aW9uOiAiU3BlY2lmeSBhIGN1c3RvbSBLdWJlcm5ldGVzIHNlY3JldCB0aGF0IHdpbGwgYmUgdXNlZCB0byBhdXRoZW50aWNhdGUgd2l0aCBhIGNvbnRhaW5lciByZWdpc3RyeS4gTXVzdCBiZSBkZWZpbmVkIGluIGt1YmUtc3lzdGVtIG5hbWVzcGFjZS4gKGV4YW1wbGU6IHJlZ2NyZWQpIgogIHR5cGU6IHN0cmluZwogIGxhYmVsOiAiUmVnaXN0cnkgS3ViZXJuZXRlcyBTZWNyZXQiCiAgZ3JvdXA6ICJDb250YWluZXIgUmVnaXN0cnkgUGFyYW1ldGVycyIKLSB2YXJpYWJsZTogY3VzdG9tUmVnaXN0cnlVUkwKICBkZXNjcmlwdGlvbjogIlNwZWNpZnkgYSBjdXN0b20gY29udGFpbmVyIHJlZ2lzdHJ5IHNlcnZlciAoaW5jbHVkaW5nIHJlcG9zaXRvcnkpIHRoYXQgd2lsbCBiZSB1c2VkIGluc3RlYWQgb2YgaW5kZXguZG9ja2VyLmlvIHRvIGRvd25sb2FkIERvY2tlciBpbWFnZXMuIChleGFtcGxlOiBkb2NrZXJodWIuYWNtZS5uZXQ6NTQ0MyBvciBteXJlZ2lzdHJ5LmNvbS9teXJlcG9zaXRvcnkvKSIKICBsYWJlbDogIkN1c3RvbSBSZWdpc3RyeSBVUkwiCiAgdHlwZTogc3RyaW5nCiAgZ3JvdXA6ICJDb250YWluZXIgUmVnaXN0cnkgUGFyYW1ldGVycyIKCgoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBPcHRpb25hbCBmZWF0dXJlcyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCi0gdmFyaWFibGU6IGNzaQogIGRlc2NyaXB0aW9uOiAiU2VsZWN0IGlmIHlvdSB3YW50IHRvIGVuYWJsZSBDU0kgKENvbnRhaW5lciBTdG9yYWdlIEludGVyZmFjZSkuIENTSSBpcyBzdGlsbCBpbiBBTFBIQS4iCiAgdHlwZTogYm9vbGVhbgogIGxhYmVsOiAiRW5hYmxlIENTSSIKICBkZWZhdWx0OiBmYWxzZQogIHJlcXVpcmVkOiBmYWxzZQogIGdyb3VwOiAiQWR2YW5jZWQgcGFyYW1ldGVycyIKLSB2YXJpYWJsZTogc3RvcmsKICBkZWZhdWx0OiB0cnVlCiAgbGFiZWw6ICJJbnN0YWxsIFN0b3JrIgogIGRlc2NyaXB0aW9uOiAiU3RvcmFnZSBPcmNoZXN0cmF0aW9uIFJ1bnRpbWUgZm9yIEt1YmVybmV0ZXMgKFNUT1JLKSBpcyBhIHNjaGVkdWxlciBwbHVnaW4gdGhhdCBwcm92aWRlcyBoeXBlci1jb252ZXJnZW5jZSwgc25hcHNob3RzIGFuZCBzdG9yYWdlLWF3YXJlIHNjaGVkdWxpbmcgKHJlY29tbWVuZGVkKS4iCiAgdHlwZTogYm9vbGVhbgogIGdyb3VwOiAiQWR2YW5jZWQgcGFyYW1ldGVycyIKLSB2YXJpYWJsZTogc3RvcmtWZXJzaW9uCiAgZGVmYXVsdDogIjEuMi4wIgogIGxhYmVsOiAiU3RvcmsgdmVyc2lvbiIKICBkZXNjcmlwdGlvbjogIlZlcnNpb24gb2YgU3RvcmsgdG8gYmUgdXNlZCIKICB0eXBlOiBzdHJpbmcKICBncm91cDogIkFkdmFuY2VkIHBhcmFtZXRlcnMiCi0gdmFyaWFibGU6IGxpZ2h0aG91c2UKICBkZWZhdWx0OiBmYWxzZQogIGxhYmVsOiAiTGlnaHRob3VzZSIKICBkZXNjcmlwdGlvbjogIlNlbGVjdCBpZiB5b3Ugd2FudCB0byBpbnN0YWxsIFBvcnR3b3J4IExpZ2h0aG91c2UgR1VJLiIKICB0eXBlOiBib29sZWFuCiAgZ3JvdXA6ICJBZHZhbmNlZCBwYXJhbWV0ZXJzIgotIHZhcmlhYmxlOiBsaWdodGhvdXNlVmVyc2lvbgogIGRlZmF1bHQ6ICIxLjQuMCIKICBkZXNjcmlwdGlvbjogIlZlcnNpb24gb2YgdGhlIExpZ2h0aG91c2UgR1VJIHRvIGJlIHVzZWQiCiAgdHlwZTogc3RyaW5nCiAgbGFiZWw6ICJMaWdodGhvdXNlIHZlcnNpb24iCiAgZ3JvdXA6ICJBZHZhbmNlZCBwYXJhbWV0ZXJzIgotIHZhcmlhYmxlOiBlbnZWYXJzCiAgbGFiZWw6ICJFbnZpcm9ubWVudCB2YXJpYWJsZXMiCiAgZGVzY3JpcHRpb246ICJzZW1pLWNvbG9uLXNlcGFyYXRlZCBsaXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxlcyB0aGF0IHdpbGwgYmUgZXhwb3J0ZWQgdG8gcG9ydHdvcnguIChleGFtcGxlOiBBUElfU0VSVkVSPWh0dHA6Ly9saWdodGhvdXNlLW5ldy5wb3J0d29yeC5jb207TVlFTlYxPXZhbDE7TVlFTlYyPXZhbDIpIgogIHR5cGU6IHN0cmluZwogIGdyb3VwOiAiQWR2YW5jZWQgcGFyYW1ldGVycyIKLSB2YXJpYWJsZTogaW1hZ2VWZXJzaW9uCiAgZGVmYXVsdDogIjEuNS4xIgogIGRlc2NyaXB0aW9uOiAiVGhlIFBvcnR3b3J4IGltYWdlIHZlcnNpb24gdG8gYmUgdXNlZCB3aGlsZSBkZXBsb3lpbmciCiAgdHlwZTogc3RyaW5nCiAgbGFiZWw6IFBvcnR3b3J4IHZlcnNpb24gdG8gYmUgZGVwbG95ZWQuCiAgZ3JvdXA6ICJBZHZhbmNlZCBwYXJhbWV0ZXJzIgotIHZhcmlhYmxlOiBjbHVzdGVyTmFtZQogIGRlc2NyaXB0aW9uOiAiTmFtZSBvZiB0aGUgUG9ydHdvcnggQ2x1c3RlciIKICB0eXBlOiBzdHJpbmcKICBsYWJlbDogUG9ydHdvcnggY2x1c3RlciBuYW1lCiAgZGVmYXVsdDogbXljbHVzdGVyCiAgZ3JvdXA6ICJBZHZhbmNlZCBwYXJhbWV0ZXJzIgo=',
    'portworx/templates/NOTES.txt':
        'WW91ciBSZWxlYXNlIGlzIG5hbWVkIHt7IC5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQoKUG9ydHdvcnggUG9kcyBzaG91bGQgYmUgcnVubmluZyBvbiBlYWNoIG5vZGUgaW4geW91ciBjbHVzdGVyLgoKUG9ydHdvcnggd291bGQgY3JlYXRlIGEgdW5pZmllZCBwb29sIG9mIHRoZSBkaXNrcyBhdHRhY2hlZCB0byB5b3VyIEt1YmVybmV0ZXMgbm9kZXMuIE5vIGZ1cnRoZXIgYWN0aW9uIHNob3VsZCBiZSByZXF1aXJlZCBhbmQgeW91IGFyZSByZWFkeSB0byBjb25zdW1lIFBvcnR3b3J4IFZvbHVtZXMgYXMgcGFydCBvZiB5b3VyIGFwcGxpY2F0aW9uIGRhdGEgcmVxdWlyZW1lbnRzLgoKRm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24gb24gdXNhZ2Ugb2YgdGhlIFBvcnR3b3J4LCByZWZlciB0byBmb2xsb3dpbmcgZG9jIHBhZ2VzLgoKLSBGb3IgZHluYW1pY2FsbHkgcHJvdmlzaW9uaW5nIHZvbHVtZXM6IGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvZHluYW1pYy1wcm92aXNpb25pbmcuaHRtbAotIEZvciBwcmVwcm92aXNpb25lZCB2b2x1bWVzOiBodHRwczovL2RvY3MucG9ydHdvcnguY29tL3NjaGVkdWxlci9rdWJlcm5ldGVzL3ByZXByb3Zpc2lvbmVkLXZvbHVtZXMuaHRtbAotIFRvIHVzZSBTdG9yayAoU3RvcmFnZSBPcmNoZXN0cmF0aW9uIFJ1bnRpbWUgZm9yIEt1YmVybmV0ZXMpIGZvciBoeXBlcmNvbnZlcmdlbmNlIGFuZCBzbmFwc2hvdHM6IGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvc3RvcmsuaHRtbAotIEZvciBzdGF0ZWZ1bCBhcHBsaWNhdGlvbiBzb2x1dGlvbnMgdXNpbmcgUG9ydHdvcng6IGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvazhzLXB4LWFwcC1zYW1wbGVzLmh0bWwKLSBGb3IgaW50ZXJhY3RpdmUgdHV0b3JpYWxzIG9uIHVzaW5nIFBvcnR3b3J4IG9uIEt1YmVybmV0ZXM6IGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvcHgtazhzLWludGVyYWN0aXZlLmh0bWwK',
    'portworx/templates/_helpers.tpl':
        'e3svKiBHZXRzIHRoZSBjb3JyZWN0IEFQSSBWZXJzaW9uIGJhc2VkIG9uIHRoZSB2ZXJzaW9uIG9mIHRoZSBjbHVzdGVyCiovfX0KCnt7LSBkZWZpbmUgInJiYWMuYXBpVmVyc2lvbiIgLX19Cnt7LSBpZiBzZW12ZXJDb21wYXJlICI+PSAxLjgtMCIgLkNhcGFiaWxpdGllcy5LdWJlVmVyc2lvbi5HaXRWZXJzaW9uIC19fQoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIKe3stIGVsc2UgLX19CiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEiCnt7LSBlbmQgLX19Cnt7LSBlbmQgLX19CgoKe3stIGRlZmluZSAicHgubGFiZWxzIiAtfX0KY2hhcnQ6ICJ7eyAuQ2hhcnQuTmFtZSB9fS17eyAuQ2hhcnQuVmVyc2lvbiB9fSIKaGVyaXRhZ2U6IHt7IC5SZWxlYXNlLlNlcnZpY2UgfCBxdW90ZSB9fQpyZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIHwgcXVvdGUgfX0Ke3stIGVuZCAtfX0KCnt7LSBkZWZpbmUgImRyaXZlT3B0cyIgfX0Ke3sgJHYgOj0gLlZhbHVlcy5pbnN0YWxsT3B0aW9ucy5kcml2ZXMgfCBzcGxpdCAiLCIgfX0Ke3skdi5fMH19Cnt7LSBlbmQgLX19Cgp7ey0gZGVmaW5lICJweC5rdWJlcm5ldGVzVmVyc2lvbiIgLX19Cnt7JHZlcnNpb24gOj0gLkNhcGFiaWxpdGllcy5LdWJlVmVyc2lvbi5HaXRWZXJzaW9uIHwgcmVnZXhGaW5kICJedlxcZCtcXC5cXGQrXFwuXFxkKyJ9fXt7JHZlcnNpb259fQp7ey0gZW5kIC19fQoKCnt7LSBkZWZpbmUgInB4LmdldEltYWdlIiAtfX0Ke3stIGlmICguVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMKSAtfX0KICAgIHt7LSBpZiAoZXEgIi8iICguVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMIHwgcmVnZXhGaW5kICIvIikpIC19fQogICAgICAgIHt7LSBpZiAuVmFsdWVzLm9wZW5zaGlmdEluc3RhbGwgLX19CiAgICAgICAgICAgIHt7IGNhdCAodHJpbSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMKSAiL3B4LW1vbml0b3IiIHwgcmVwbGFjZSAiICIgIiJ9fQogICAgICAgIHt7LSBlbHNlIC19fQogICAgICAgICAgICB7eyBjYXQgKHRyaW0gLlZhbHVlcy5jdXN0b21SZWdpc3RyeVVSTCkgIi9vY2ktbW9uaXRvciIgfCByZXBsYWNlICIgIiAiIn19CiAgICAgICAge3stIGVuZCAtfX0KICAgIHt7LSBlbHNlIC19fQogICAgICAgIHt7LSBpZiAuVmFsdWVzLm9wZW5zaGlmdEluc3RhbGwgLX19CiAgICAgICAgICAgIHt7Y2F0ICh0cmltIC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpICIvcG9ydHdvcngvcHgtbW9uaXRvciIgfCByZXBsYWNlICIgIiAiIn19CiAgICAgICAge3stIGVsc2UgLX19CiAgICAgICAgICAgIHt7Y2F0ICh0cmltIC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpICIvcG9ydHdvcngvb2NpLW1vbml0b3IiIHwgcmVwbGFjZSAiICIgIiJ9fQogICAgICAgIHt7LSBlbmQgLX19CiAgICB7ey0gZW5kIC19fQp7ey0gZWxzZSAtfX0KICAgIHt7LSBpZiAuVmFsdWVzLm9wZW5zaGlmdEluc3RhbGwgLX19CiAgICAgICAge3sgInJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbS9wb3J0d29yeC9weC1tb25pdG9yIiB9fQogICAge3stIGVsc2UgLX19CiAgICAgICAge3sgInBvcnR3b3J4L29jaS1tb25pdG9yIiB9fQogICAge3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LSBkZWZpbmUgInB4LmdldFN0b3JrSW1hZ2UiIC19fQp7ey0gaWYgKC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpIC19fQogICAge3stIGlmIChlcSAiLyIgKC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwgfCByZWdleEZpbmQgIi8iKSkgLX19CiAgICAgICAge3sgY2F0ICh0cmltIC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpICIvc3RvcmsiIHwgcmVwbGFjZSAiICIgIiJ9fQogICAge3stIGVsc2UgLX19CiAgICAgICAge3tjYXQgKHRyaW0gLlZhbHVlcy5jdXN0b21SZWdpc3RyeVVSTCkgIi9vcGVuc3RvcmFnZS9zdG9yayIgfCByZXBsYWNlICIgIiAiIn19CiAgICB7ey0gZW5kIC19fQp7ey0gZWxzZSAtfX0KICAgIHt7ICJvcGVuc3RvcmFnZS9zdG9yayIgfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LSBkZWZpbmUgInB4LmdldGs4c0ltYWdlcyIgLX19Cnt7LSBpZiAoLlZhbHVlcy5jdXN0b21SZWdpc3RyeVVSTCkgLX19CiAgICB7ey0gaWYgKGVxICIvIiAoLlZhbHVlcy5jdXN0b21SZWdpc3RyeVVSTCB8IHJlZ2V4RmluZCAiLyIpKSAtfX0KICAgICAgICB7eyB0cmltIC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwgfX0KICAgIHt7LSBlbHNlIC19fQogICAgICAgIHt7Y2F0ICh0cmltIC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpICIvZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzIiB8IHJlcGxhY2UgIiAiICIifX0KICAgIHt7LSBlbmQgLX19Cnt7LSBlbHNlIC19fQogICAgICAgIHt7ICJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMiIH19Cnt7LSBlbmQgLX19Cnt7LSBlbmQgLX19Cgp7ey0gZGVmaW5lICJweC5nZXRjc2lJbWFnZXMiIC19fQp7ey0gaWYgKC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpIC19fQogICAge3stIGlmIChlcSAiLyIgKC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwgfCByZWdleEZpbmQgIi8iKSkgLX19CiAgICAgICAge3sgdHJpbSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMIH19CiAgICB7ey0gZWxzZSAtfX0KICAgICAgICB7e2NhdCAodHJpbSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMKSAiL3F1YXkuaW8vazhzY3NpIiB8IHJlcGxhY2UgIiAiICIifX0KICAgIHt7LSBlbmQgLX19Cnt7LSBlbHNlIC19fQogICAgICAgIHt7ICJxdWF5LmlvL2s4c2NzaSIgfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LSBkZWZpbmUgInB4LmdldExpZ2h0aG91c2VJbWFnZXMiIC19fQp7ey0gaWYgKC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwpIC19fQogICAge3stIGlmIChlcSAiLyIgKC5WYWx1ZXMuY3VzdG9tUmVnaXN0cnlVUkwgfCByZWdleEZpbmQgIi8iKSkgLX19CiAgICAgICAge3sgdHJpbSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMIH19CiAgICB7ey0gZWxzZSAtfX0KICAgICAgICB7e2NhdCAodHJpbSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMKSAiL3BvcnR3b3J4LyIgfCByZXBsYWNlICIgIiAiIn19CiAgICB7ey0gZW5kIC19fQp7ey0gZWxzZSAtfX0KICAgICAgICB7eyAiL3BvcnR3b3J4LyIgfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LSBkZWZpbmUgInB4LnJlZ2lzdHJ5Q29uZmlnVHlwZSIgLX19Cnt7LSBpZiBzZW12ZXJDb21wYXJlICI+PTEuOS0wIiAuQ2FwYWJpbGl0aWVzLkt1YmVWZXJzaW9uLkdpdFZlcnNpb24gLX19CiIuZG9ja2VyY29uZmlnanNvbiIKe3stIGVsc2UgLX19CiIuZG9ja2VyY2ZnIgp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQoKe3svKgpDcmVhdGUgdGhlIG5hbWUgb2YgdGhlIHNlcnZpY2UgYWNjb3VudCB0byB1c2UgZm9yIGhvb2tzCiovfX0Ke3stIGRlZmluZSAicHguaG9va1NlcnZpY2VBY2NvdW50IiAtfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnQuaG9vay5jcmVhdGUgLX19CiAgICB7ey0gcHJpbnRmICIlcy1ob29rIiAuQ2hhcnQuTmFtZSB8IHJlcGxhY2UgIisiICJfIiB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgLX19Cnt7LSBlbHNlIC19fQogICAge3sgZGVmYXVsdCAiZGVmYXVsdCIgLlZhbHVlcy5zZXJ2aWNlQWNjb3VudC5ob29rLm5hbWUgfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LyoKQ3JlYXRlIHRoZSBuYW1lIG9mIHRoZSBjbHVzdGVyIHJvbGUgdG8gdXNlIGZvciBob29rcwoqL319Cnt7LSBkZWZpbmUgInB4Lmhvb2tDbHVzdGVyUm9sZSIgLX19Cnt7LSBpZiAuVmFsdWVzLnNlcnZpY2VBY2NvdW50Lmhvb2suY3JlYXRlIC19fQogICAge3stIHByaW50ZiAiJXMtaG9vayIgLkNoYXJ0Lk5hbWUgfCByZXBsYWNlICIrIiAiXyIgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZWxzZSAtfX0KICAgIHt7IGRlZmF1bHQgImRlZmF1bHQiIC5WYWx1ZXMuc2VydmljZUFjY291bnQuaG9vay5uYW1lIH19Cnt7LSBlbmQgLX19Cnt7LSBlbmQgLX19Cgp7ey8qCkNyZWF0ZSB0aGUgbmFtZSBvZiB0aGUgY2x1c3RlciByb2xlIGJpbmRpbmcgdG8gdXNlIGZvciBob29rcwoqL319Cnt7LSBkZWZpbmUgInB4Lmhvb2tDbHVzdGVyUm9sZUJpbmRpbmciIC19fQp7ey0gaWYgLlZhbHVlcy5zZXJ2aWNlQWNjb3VudC5ob29rLmNyZWF0ZSAtfX0KICAgIHt7LSBwcmludGYgIiVzLWhvb2siIC5DaGFydC5OYW1lIHwgcmVwbGFjZSAiKyIgIl8iIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiAtfX0Ke3stIGVsc2UgLX19CiAgICB7eyBkZWZhdWx0ICJkZWZhdWx0IiAuVmFsdWVzLnNlcnZpY2VBY2NvdW50Lmhvb2submFtZSB9fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQo=',
    'portworx/templates/hooks/post-delete/px-postdelete-unlabelnode.yaml':
        'e3stICRjdXN0b21SZWdpc3RyeVVSTCA6PSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMIHwgZGVmYXVsdCAibm9uZSIgfX0Ke3stICRyZWdpc3RyeVNlY3JldCA6PSAuVmFsdWVzLnJlZ2lzdHJ5U2VjcmV0IHwgZGVmYXVsdCAibm9uZSIgfX0KCmFwaVZlcnNpb246IGJhdGNoL3YxCmtpbmQ6IEpvYgptZXRhZGF0YToKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbmFtZTogcHgtaG9vay1wb3N0ZGVsZXRlLXVubGFiZWxub2RlCiAgbGFiZWxzOgogICAgaGVyaXRhZ2U6IHt7LlJlbGVhc2UuU2VydmljZSB8IHF1b3RlIH19CiAgICByZWxlYXNlOiB7ey5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQogICAgY2hhcnQ6ICJ7ey5DaGFydC5OYW1lfX0te3suQ2hhcnQuVmVyc2lvbn19IgogICAgYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieToge3suUmVsZWFzZS5TZXJ2aWNlIHwgcXVvdGUgfX0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlOiB7ey5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQogIGFubm90YXRpb25zOgogICAgImhlbG0uc2gvaG9vayI6IHBvc3QtZGVsZXRlCiAgICAiaGVsbS5zaC9ob29rLXdlaWdodCI6ICItNSIKICAgICJoZWxtLnNoL2hvb2stZGVsZXRlLXBvbGljeSI6IGJlZm9yZS1ob29rLWNyZWF0aW9uCnNwZWM6Cnt7IGlmIHNlbXZlckNvbXBhcmUgIj49IDEuOC0wIiAuQ2FwYWJpbGl0aWVzLkt1YmVWZXJzaW9uLkdpdFZlcnNpb24gfX0KICBiYWNrb2ZmTGltaXQ6IDAKe3sgZWxzZSB9fQogIGFjdGl2ZURlYWRsaW5lU2Vjb25kczogMzAKe3sgZW5kIH19CiAgdGVtcGxhdGU6CiAgICBzcGVjOgogICAgICB7ey0gaWYgbm90IChlcSAkcmVnaXN0cnlTZWNyZXQgIm5vbmUiKSB9fQogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZToge3sgJHJlZ2lzdHJ5U2VjcmV0IH19CiAgICAgIHt7LSBlbmQgfX0KICAgICAgcmVzdGFydFBvbGljeTogTmV2ZXIKICAgICAgc2VydmljZUFjY291bnROYW1lOiB7eyB0ZW1wbGF0ZSAicHguaG9va1NlcnZpY2VBY2NvdW50IiAuIH19CiAgICAgIGNvbnRhaW5lcnM6CiAgICAgIC0gbmFtZTogcG9zdC1kZWxldGUtam9iCiAgICAgICAge3stIGlmIGVxICRjdXN0b21SZWdpc3RyeVVSTCAibm9uZSIgfX0KICAgICAgICBpbWFnZTogImxhY2hsYW5ldmVuc29uL2s4cy1rdWJlY3RsOnt7IHRlbXBsYXRlICJweC5rdWJlcm5ldGVzVmVyc2lvbiIgLiB9fSIKICAgICAgICB7ey0gZWxzZX19CiAgICAgICAgaW1hZ2U6ICJ7eyAkY3VzdG9tUmVnaXN0cnlVUkwgfX0vbGFjaGxhbmV2ZW5zb24vazhzLWt1YmVjdGw6e3sgdGVtcGxhdGUgInB4Lmt1YmVybmV0ZXNWZXJzaW9uIiAuIH19IgogICAgICAgIHt7LSBlbmR9fQogICAgICAgIGFyZ3M6IFsnbGFiZWwnLCdub2RlcycsJy0tYWxsJywncHgvZW5hYmxlZC0nXQo=',
    'portworx/templates/hooks/pre-delete/px-predelete-nodelabel.yaml':
        'e3stICRjdXN0b21SZWdpc3RyeVVSTCA6PSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMIHwgZGVmYXVsdCAibm9uZSIgfX0Ke3stICRyZWdpc3RyeVNlY3JldCA6PSAuVmFsdWVzLnJlZ2lzdHJ5U2VjcmV0IHwgZGVmYXVsdCAibm9uZSIgfX0KCmFwaVZlcnNpb246IGJhdGNoL3YxCmtpbmQ6IEpvYgptZXRhZGF0YToKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbmFtZTogcHgtaG9vay1wcmVkZWxldGUtbm9kZWxhYmVsCiAgbGFiZWxzOgogICAgaGVyaXRhZ2U6IHt7LlJlbGVhc2UuU2VydmljZSB8IHF1b3RlIH19CiAgICByZWxlYXNlOiB7ey5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQogICAgY2hhcnQ6ICJ7ey5DaGFydC5OYW1lfX0te3suQ2hhcnQuVmVyc2lvbn19IgogICAgYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieToge3suUmVsZWFzZS5TZXJ2aWNlIHwgcXVvdGUgfX0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlOiB7ey5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQogIGFubm90YXRpb25zOgogICAgImhlbG0uc2gvaG9vayI6IHByZS1kZWxldGUKICAgICJoZWxtLnNoL2hvb2std2VpZ2h0IjogIi01IgogICAgImhlbG0uc2gvaG9vay1kZWxldGUtcG9saWN5IjogYmVmb3JlLWhvb2stY3JlYXRpb24Kc3BlYzoKe3sgaWYgc2VtdmVyQ29tcGFyZSAiPj0gMS44LTAiIC5DYXBhYmlsaXRpZXMuS3ViZVZlcnNpb24uR2l0VmVyc2lvbiB9fQogIGJhY2tvZmZMaW1pdDogMAp7eyBlbHNlIH19CiAgYWN0aXZlRGVhZGxpbmVTZWNvbmRzOiAzMAp7eyBlbmQgfX0KICB0ZW1wbGF0ZToKICAgIHNwZWM6CiAgICAgIHt7LSBpZiBub3QgKGVxICRyZWdpc3RyeVNlY3JldCAibm9uZSIpIH19CiAgICAgIGltYWdlUHVsbFNlY3JldHM6CiAgICAgICAgLSBuYW1lOiB7eyAkcmVnaXN0cnlTZWNyZXQgfX0KICAgICAge3stIGVuZCB9fQogICAgICBzZXJ2aWNlQWNjb3VudE5hbWU6IHt7IHRlbXBsYXRlICJweC5ob29rU2VydmljZUFjY291bnQiIC4gfX0KICAgICAgcmVzdGFydFBvbGljeTogTmV2ZXIKICAgICAgY29udGFpbmVyczoKICAgICAgLSBuYW1lOiBwcmUtZGVsZXRlLWpvYgogICAgICAgIHt7LSBpZiBlcSAkY3VzdG9tUmVnaXN0cnlVUkwgIm5vbmUiIH19CiAgICAgICAgaW1hZ2U6ICJsYWNobGFuZXZlbnNvbi9rOHMta3ViZWN0bDp7eyB0ZW1wbGF0ZSAicHgua3ViZXJuZXRlc1ZlcnNpb24iIC4gfX0iCiAgICAgICAge3stIGVsc2V9fQogICAgICAgIGltYWdlOiAie3sgJGN1c3RvbVJlZ2lzdHJ5VVJMIH19L2xhY2hsYW5ldmVuc29uL2s4cy1rdWJlY3RsOnt7IHRlbXBsYXRlICJweC5rdWJlcm5ldGVzVmVyc2lvbiIgLiB9fSIKICAgICAgICB7ey0gZW5kfX0KICAgICAgICBhcmdzOiBbJ2xhYmVsJywnbm9kZXMnLCctLWFsbCcsJ3B4L2VuYWJsZWQ9cmVtb3ZlJywnLS1vdmVyd3JpdGUnXQo=',
    'portworx/templates/hooks/pre-install/etcd-preinstall-hook.yaml':
        'e3stICRjdXN0b21SZWdpc3RyeVVSTCA6PSAuVmFsdWVzLmN1c3RvbVJlZ2lzdHJ5VVJMIHwgZGVmYXVsdCAibm9uZSIgfX0Ke3stICRyZWdpc3RyeVNlY3JldCA6PSAuVmFsdWVzLnJlZ2lzdHJ5U2VjcmV0IHwgZGVmYXVsdCAibm9uZSIgfX0Ke3stICRldGNkQ0EgOj0gLlZhbHVlcy5ldGNkLmNhIHwgZGVmYXVsdCAibm9uZSIgfX0Ke3stICRldGNkQ2VydCA6PSAuVmFsdWVzLmV0Y2QuY2VydCB8IGRlZmF1bHQgIm5vbmUiIH19Cnt7LSAkZXRjZEtleSA6PSAuVmFsdWVzLmV0Y2Qua2V5IHwgZGVmYXVsdCAibm9uZSIgfX0KCgphcGlWZXJzaW9uOiBiYXRjaC92MQpraW5kOiBKb2IKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIG5hbWU6IHB4LWhvb2stZXRjZC1wcmVpbnN0YWxsCiAgbGFiZWxzOgogICAgaGVyaXRhZ2U6IHt7LlJlbGVhc2UuU2VydmljZSB8IHF1b3RlIH19CiAgICByZWxlYXNlOiB7ey5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQogICAgYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieToge3suUmVsZWFzZS5TZXJ2aWNlIHwgcXVvdGUgfX0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlOiB7ey5SZWxlYXNlLk5hbWUgfCBxdW90ZSB9fQogICAgY2hhcnQ6ICJ7ey5DaGFydC5OYW1lfX0te3suQ2hhcnQuVmVyc2lvbn19IgogIGFubm90YXRpb25zOgogICAgImhlbG0uc2gvaG9vayI6IHByZS1pbnN0YWxsCiAgICAiaGVsbS5zaC9ob29rLXdlaWdodCI6ICItNSIKICAgICJoZWxtLnNoL2hvb2stZGVsZXRlLXBvbGljeSI6IGJlZm9yZS1ob29rLWNyZWF0aW9uCnNwZWM6Cnt7IGlmIHNlbXZlckNvbXBhcmUgIj49IDEuOC0wIiAuQ2FwYWJpbGl0aWVzLkt1YmVWZXJzaW9uLkdpdFZlcnNpb24gfX0KICBiYWNrb2ZmTGltaXQ6IDAKe3sgZWxzZSB9fQogIGFjdGl2ZURlYWRsaW5lU2Vjb25kczogMzAKe3sgZW5kIH19CiAgdGVtcGxhdGU6CiAgICBzcGVjOgogICAgICB7ey0gaWYgbm90IChlcSAkcmVnaXN0cnlTZWNyZXQgIm5vbmUiKSB9fQogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZToge3sgJHJlZ2lzdHJ5U2VjcmV0IH19CiAgICAgIHt7LSBlbmQgfX0KICAgICAgcmVzdGFydFBvbGljeTogTmV2ZXIKICAgICAgY29udGFpbmVyczoKICAgICAgLSBuYW1lOiBwcmUtaW5zdGFsbC1qb2IKICAgICAgICB0ZXJtaW5hdGlvbk1lc3NhZ2VQYXRoOiAnL2Rldi90ZXJtaW5hdGlvbi1sb2cnCiAgICAgICAgdGVybWluYXRpb25NZXNzYWdlUG9saWN5OiAnRmFsbGJhY2tUb0xvZ3NPbkVycm9yJwogICAgICAgIGltYWdlUHVsbFBvbGljeTogQWx3YXlzCgogICAgICAgIHt7LSBpZiBlcSAkY3VzdG9tUmVnaXN0cnlVUkwgIm5vbmUiIH19CiAgICAgICAgaW1hZ2U6ICJocmlzaGkvcHgtZXRjZC1wcmVpbnN0YWxsLWhvb2s6djIiCiAgICAgICAge3stIGVsc2V9fQogICAgICAgIGltYWdlOiAie3sgJGN1c3RvbVJlZ2lzdHJ5VVJMIH19L2hyaXNoaS9weC1ldGNkLXByZWluc3RhbGwtaG9vazp2MiIKICAgICAgICB7ey0gZW5kIH19CgogICAgICAgIHt7LSBpZiAgbm90IChlcSAkZXRjZENlcnQgIm5vbmUiKSB9fQogICAgICAgIGNvbW1hbmQ6IFsnL2Jpbi9iYXNoJ10KICAgICAgICBhcmdzOiBbJy91c3IvYmluL2V0Y2RTdGF0dXMuc2gnLAogICAgICAgICAgICAgICAie3sgLlZhbHVlcy5rdmRiIH19IiwKICAgICAgICAgICAgICAgIi9ldGMvcHd4L2V0Y2RjZXJ0cy8kZXRjZENBIiwKICAgICAgICAgICAgICAgIi9ldGMvcHd4L2V0Y2RjZXJ0cy8kZXRjZENlcnQiLAogICAgICAgICAgICAgICAiL2V0Yy9wd3gvZXRjZGNlcnRzLyRldGNkS2V5Il0KICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgLSBtb3VudFBhdGg6IC9ldGMvcHd4L2V0Y2RjZXJ0cwogICAgICAgICAgbmFtZTogZXRjZGNlcnRzCiAgICAgIHZvbHVtZXM6CiAgICAgIC0gbmFtZTogZXRjZGNlcnRzCiAgICAgICAgc2VjcmV0OgogICAgICAgICAgc2VjcmV0TmFtZTogcHgtZXRjZC1jZXJ0cwogICAgICAgICAgaXRlbXM6CiAgICAgICAgICAtIGtleTogJGV0Y2RDQQogICAgICAgICAgICBwYXRoOiAkZXRjZENBCiAgICAgICAgICAtIGtleTogJGV0Y2RDZXJ0CiAgICAgICAgICAgIHBhdGg6ICRldGNkQ2VydAogICAgICAgICAgLSBrZXk6ICRldGNkS2V5CiAgICAgICAgICAgIHBhdGg6ICRldGNkS2V5CiAgICAgICAge3stIGVsc2V9fQogICAgICAgIGNvbW1hbmQ6IFsnL2Jpbi9iYXNoJ10KICAgICAgICBhcmdzOiBbJy91c3IvYmluL2V0Y2RTdGF0dXMuc2gnLCJ7eyAuVmFsdWVzLmt2ZGIgfX0iXQogICAgICAgIHt7LSBlbmR9fQo=',
    'portworx/templates/portworx-controller.yaml':
        'e3stIGlmIG9yICgoLlZhbHVlcy5vcGVuc2hpZnRJbnN0YWxsKSBhbmQgKGVxIC5WYWx1ZXMub3BlbnNoaWZ0SW5zdGFsbCB0cnVlKSkgKCguVmFsdWVzLkFLU29yRUtTSW5zdGFsbCkgYW5kIChlcSAuVmFsdWVzLkFLU29yRUtTSW5zdGFsbCB0cnVlKSkgKCguQ2FwYWJpbGl0aWVzLkt1YmVWZXJzaW9uLkdpdFZlcnNpb24gfCByZWdleE1hdGNoICJna2UiKSkgfX0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZTogcG9ydHdvcngtcHZjLWNvbnRyb2xsZXItYWNjb3VudAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlCmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iIC4gfX0KbWV0YWRhdGE6CiAgIG5hbWU6IHBvcnR3b3J4LXB2Yy1jb250cm9sbGVyLXJvbGUKcnVsZXM6Ci0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbInBlcnNpc3RlbnR2b2x1bWVzIl0KICB2ZXJiczogWyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwidXBkYXRlIiwid2F0Y2giXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJwZXJzaXN0ZW50dm9sdW1lcy9zdGF0dXMiXQogIHZlcmJzOiBbInVwZGF0ZSJdCi0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbInBlcnNpc3RlbnR2b2x1bWVjbGFpbXMiXQogIHZlcmJzOiBbImdldCIsICJsaXN0IiwgInVwZGF0ZSIsICJ3YXRjaCJdCi0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbInBlcnNpc3RlbnR2b2x1bWVjbGFpbXMvc3RhdHVzIl0KICB2ZXJiczogWyJ1cGRhdGUiXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJwb2RzIl0KICB2ZXJiczogWyJjcmVhdGUiLCAiZGVsZXRlIiwgImdldCIsICJsaXN0IiwgIndhdGNoIl0KLSBhcGlHcm91cHM6IFsic3RvcmFnZS5rOHMuaW8iXQogIHJlc291cmNlczogWyJzdG9yYWdlY2xhc3NlcyJdCiAgdmVyYnM6IFsiZ2V0IiwgImxpc3QiLCAid2F0Y2giXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJlbmRwb2ludHMiLCAic2VydmljZXMiXQogIHZlcmJzOiBbImNyZWF0ZSIsICJkZWxldGUiLCAiZ2V0Il0KLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VjcmV0cyJdCiAgdmVyYnM6IFsiZ2V0IiwgImxpc3QiXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJub2RlcyJdCiAgdmVyYnM6IFsiZ2V0IiwgImxpc3QiXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJldmVudHMiXQogIHZlcmJzOiBbIndhdGNoIl0KLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsiZXZlbnRzIl0KICB2ZXJiczogWyJjcmVhdGUiLCAicGF0Y2giLCAidXBkYXRlIl0KLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VydmljZWFjY291bnRzIl0KICB2ZXJiczogWyJnZXQiLCAiY3JlYXRlIl0KLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsiY29uZmlnbWFwcyJdCiAgdmVyYnM6IFsiZ2V0IiwgImNyZWF0ZSIsICJ1cGRhdGUiXQotLS0Ka2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iIC4gfX0KbWV0YWRhdGE6CiAgbmFtZTogcG9ydHdvcngtcHZjLWNvbnRyb2xsZXItcm9sZS1iaW5kaW5nCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZTogcG9ydHdvcngtcHZjLWNvbnRyb2xsZXItYWNjb3VudAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHBvcnR3b3J4LXB2Yy1jb250cm9sbGVyLXJvbGUKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwotLS0KYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IERlcGxveW1lbnQKbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICBzY2hlZHVsZXIuYWxwaGEua3ViZXJuZXRlcy5pby9jcml0aWNhbC1wb2Q6ICIiCiAgbGFiZWxzOgogICAgdGllcjogY29udHJvbC1wbGFuZQogIG5hbWU6IHBvcnR3b3J4LXB2Yy1jb250cm9sbGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIHJlcGxpY2FzOiAzCiAgc3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhTdXJnZTogMQogICAgICBtYXhVbmF2YWlsYWJsZTogMQogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGFubm90YXRpb25zOgogICAgICAgIHNjaGVkdWxlci5hbHBoYS5rdWJlcm5ldGVzLmlvL2NyaXRpY2FsLXBvZDogIiIKICAgICAgbGFiZWxzOgogICAgICAgIG5hbWU6IHBvcnR3b3J4LXB2Yy1jb250cm9sbGVyCiAgICAgICAgdGllcjogY29udHJvbC1wbGFuZQogICAgc3BlYzoKICAgICB7ey0gaWYgKGFuZCAoLlZhbHVlcy5vcGVuc2hpZnRJbnN0YWxsKSAoZXEgLlZhbHVlcy5vcGVuc2hpZnRJbnN0YWxsIHRydWUpKX19CiAgICAgIGltYWdlUHVsbFNlY3JldHM6CiAgICAgICAgLSBuYW1lOiB7eyByZXF1aXJlZCAiQSByZWdpc3RyeSBzZWNyZXQgaXMgcmVxdWlyZWQgZm9yIG9wZW5zaGlmdCBpbnN0YWxsYXRpb24iIC5WYWx1ZXMucmVnaXN0cnlTZWNyZXQgfX0KICAgICB7ey0gZWxzZSB9fQogICAgICB7ey0gaWYgbm90IChlbXB0eSAuVmFsdWVzLnJlZ2lzdHJ5U2VjcmV0KSB9fQogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZToge3sgLlZhbHVlcy5yZWdpc3RyeVNlY3JldCB9fQogICAgICB7ey0gZW5kIH19ICAgIAogICAgIHt7LSBlbmQgfX0KICAgICAgY29udGFpbmVyczoKICAgICAgLSBjb21tYW5kOgogICAgICAgIC0ga3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgICAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKICAgICAgICAtIC0tYWRkcmVzcz0wLjAuMC4wCiAgICAgICAgLSAtLWNvbnRyb2xsZXJzPXBlcnNpc3RlbnR2b2x1bWUtYmluZGVyCiAgICAgICAgLSAtLXVzZS1zZXJ2aWNlLWFjY291bnQtY3JlZGVudGlhbHM9dHJ1ZQogICAgICAgIC0gLS1sZWFkZXItZWxlY3QtcmVzb3VyY2UtbG9jaz1jb25maWdtYXBzCiAgICAgICAgaW1hZ2U6ICJ7eyB0ZW1wbGF0ZSAicHguZ2V0azhzSW1hZ2VzIiAuIH19L2t1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFtZDY0Ont7IHRlbXBsYXRlICJweC5rdWJlcm5ldGVzVmVyc2lvbiIgLiB9fSIKICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgZmFpbHVyZVRocmVzaG9sZDogOAogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgICAgIHBhdGg6IC9oZWFsdGh6CiAgICAgICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgICAgICAgIHNjaGVtZTogSFRUUAogICAgICAgICAgaW5pdGlhbERlbGF5U2Vjb25kczogMTUKICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiAxNQogICAgICAgIG5hbWU6IHBvcnR3b3J4LXB2Yy1jb250cm9sbGVyLW1hbmFnZXIKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgY3B1OiAyMDBtCiAgICAgIGhvc3ROZXR3b3JrOiB0cnVlCiAgICAgIGFmZmluaXR5OgogICAgICAgIHBvZEFudGlBZmZpbml0eToKICAgICAgICAgIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb246CiAgICAgICAgICAgIC0gbGFiZWxTZWxlY3RvcjoKICAgICAgICAgICAgICAgIG1hdGNoRXhwcmVzc2lvbnM6CiAgICAgICAgICAgICAgICAgIC0ga2V5OiAibmFtZSIKICAgICAgICAgICAgICAgICAgICBvcGVyYXRvcjogSW4KICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgICAgICAgLSBwb3J0d29yeC1wdmMtY29udHJvbGxlcgogICAgICAgICAgICAgIHRvcG9sb2d5S2V5OiAia3ViZXJuZXRlcy5pby9ob3N0bmFtZSIKICAgICAgc2VydmljZUFjY291bnROYW1lOiBwb3J0d29yeC1wdmMtY29udHJvbGxlci1hY2NvdW50Cnt7LSBlbmQgfX0K',
    'portworx/templates/portworx-csi.yaml':
        'e3stIGlmICguVmFsdWVzLmNzaSkgYW5kIChlcSAuVmFsdWVzLmNzaSB0cnVlKX19Cnt7LSAkY3VzdG9tUmVnaXN0cnlVUkwgOj0gLlZhbHVlcy5jdXN0b21SZWdpc3RyeVVSTCB8IGRlZmF1bHQgIm5vbmUiIH19CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6IHB4LWNzaS1hY2NvdW50CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0Ka2luZDogQ2x1c3RlclJvbGUKYXBpVmVyc2lvbjoge3sgdGVtcGxhdGUgInJiYWMuYXBpVmVyc2lvbiIgLiB9fQptZXRhZGF0YToKICAgbmFtZTogcHgtY3NpLXJvbGUKcnVsZXM6Ci0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbIm5vZGVzIl0KICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCJdCi0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbInBlcnNpc3RlbnR2b2x1bWVzIl0KICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCIsICJjcmVhdGUiLCAiZGVsZXRlIiwgInVwZGF0ZSJdCi0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbInBlcnNpc3RlbnR2b2x1bWVjbGFpbXMiXQogIHZlcmJzOiBbImdldCIsICJsaXN0IiwgIndhdGNoIiwgInVwZGF0ZSJdCi0gYXBpR3JvdXBzOiBbInN0b3JhZ2UuazhzLmlvIl0KICByZXNvdXJjZXM6IFsic3RvcmFnZWNsYXNzZXMiXQogIHZlcmJzOiBbImdldCIsICJsaXN0IiwgIndhdGNoIl0KLSBhcGlHcm91cHM6IFsic3RvcmFnZS5rOHMuaW8iXQogIHJlc291cmNlczogWyJ2b2x1bWVhdHRhY2htZW50cyJdCiAgdmVyYnM6IFsiZ2V0IiwgImxpc3QiLCAid2F0Y2giLCAidXBkYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiB7eyB0ZW1wbGF0ZSAicmJhYy5hcGlWZXJzaW9uIiAuIH19Cm1ldGFkYXRhOgogIG5hbWU6IHB4LWNzaS1yb2xlLWJpbmRpbmcKc3ViamVjdHM6Ci0ga2luZDogU2VydmljZUFjY291bnQKICBuYW1lOiBweC1jc2ktYWNjb3VudAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHB4LWNzaS1yb2xlCiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KLS0tCmtpbmQ6IFNlcnZpY2UKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgbmFtZTogcHgtY3NpLXNlcnZpY2UKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCi0tLQpraW5kOiBTdGF0ZWZ1bFNldAphcGlWZXJzaW9uOiBhcHBzL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogcHgtY3NpLWV4dAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZXJ2aWNlTmFtZTogInB4LWNzaS1zZXJ2aWNlIgogIHJlcGxpY2FzOiAxCiAgdGVtcGxhdGU6CiAgICBtZXRhZGF0YToKICAgICAgbGFiZWxzOgogICAgICAgIGFwcDogcHgtY3NpLWRyaXZlcgogICAgc3BlYzoKICAgICAgc2VydmljZUFjY291bnQ6IHB4LWNzaS1hY2NvdW50CiAgICAgIGNvbnRhaW5lcnM6CiAgICAgICAgLSBuYW1lOiBjc2ktZXh0ZXJuYWwtcHJvdmlzaW9uZXIKICAgICAgICAgIGltYWdlUHVsbFBvbGljeTogQWx3YXlzCiAgICAgICAgICBpbWFnZTogInt7IHRlbXBsYXRlICJweC5nZXRjc2lQcm92aXNpb25lciIgLiB9fS9jc2ktcHJvdmlzaW9uZXI6djAuMi4wIgogICAgICAgICAgYXJnczoKICAgICAgICAgICAgLSAiLS12PTUiCiAgICAgICAgICAgIC0gIi0tcHJvdmlzaW9uZXI9Y29tLm9wZW5zdG9yYWdlLnB4ZCIKICAgICAgICAgICAgLSAiLS1jc2ktYWRkcmVzcz0kKEFERFJFU1MpIgogICAgICAgICAgZW52OgogICAgICAgICAgICAtIG5hbWU6IEFERFJFU1MKICAgICAgICAgICAgICB2YWx1ZTogL2NzaS9jc2kuc29jawogICAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICAgICAtIG5hbWU6IHNvY2tldC1kaXIKICAgICAgICAgICAgICBtb3VudFBhdGg6IC9jc2kKICAgICAgICAtIG5hbWU6IGNzaS1hdHRhY2hlcgogICAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBBbHdheXMKICAgICAgICAgIGltYWdlOiAie3sgdGVtcGxhdGUgInB4LmdldGNzaUltYWdlcyIgLiB9fS9jc2ktYXR0YWNoZXI6djAuMi4wIgogICAgICAgICAgYXJnczoKICAgICAgICAgICAgLSAiLS12PTUiCiAgICAgICAgICAgIC0gIi0tY3NpLWFkZHJlc3M9JChBRERSRVNTKSIKICAgICAgICAgIGVudjoKICAgICAgICAgICAgLSBuYW1lOiBBRERSRVNTCiAgICAgICAgICAgICAgdmFsdWU6IC9jc2kvY3NpLnNvY2sKICAgICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAgICAgLSBuYW1lOiBzb2NrZXQtZGlyCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvY3NpCiAgICAgIHZvbHVtZXM6CiAgICAgICAgLSBuYW1lOiBzb2NrZXQtZGlyCiAgICAgICAgICBob3N0UGF0aDoKICAgICAgICAgICAgcGF0aDogL3Zhci9saWIva3ViZWxldC9wbHVnaW5zL2NvbS5vcGVuc3RvcmFnZS5weGQKICAgICAgICAgICAgdHlwZTogRGlyZWN0b3J5T3JDcmVhdGUKe3stIGVuZCB9fQ==',
    'portworx/templates/portworx-ds.yaml':
        '',
    'portworx/templates/portworx-lighthouse.yaml':
        'e3stIGlmICguVmFsdWVzLmxpZ2h0aG91c2UpIGFuZCAoZXEgLlZhbHVlcy5saWdodGhvdXNlIHRydWUpIC19fQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlQWNjb3VudAptZXRhZGF0YToKICBuYW1lOiBweC1saC1hY2NvdW50CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0Ka2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogICBuYW1lOiBweC1saC1yb2xlCiAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KcnVsZXM6Ci0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiXQogIHZlcmJzOiBbImdldCIsICJjcmVhdGUiLCAidXBkYXRlIl0KLS0tCmtpbmQ6IFJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKbWV0YWRhdGE6CiAgbmFtZTogcHgtbGgtcm9sZS1iaW5kaW5nCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6IHB4LWxoLWFjY291bnQKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnJvbGVSZWY6CiAga2luZDogUm9sZQogIG5hbWU6IHB4LWxoLXJvbGUKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBweC1saWdodGhvdXNlCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGxhYmVsczoKICAgIHRpZXI6IHB4LXdlYi1jb25zb2xlCnNwZWM6CiAgdHlwZTogTm9kZVBvcnQKICBwb3J0czoKICAgIC0gbmFtZTogaHR0cAogICAgICBwb3J0OiA4MAogICAgICBub2RlUG9ydDogMzI2NzgKICAgIC0gbmFtZTogaHR0cHMKICAgICAgcG9ydDogNDQzCiAgICAgIG5vZGVQb3J0OiAzMjY3OQogIHNlbGVjdG9yOgogICAgdGllcjogcHgtd2ViLWNvbnNvbGUKLS0tCmFwaVZlcnNpb246IGFwcHMvdjFiZXRhMgpraW5kOiBEZXBsb3ltZW50Cm1ldGFkYXRhOgogIG5hbWU6IHB4LWxpZ2h0aG91c2UKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgdGllcjogcHgtd2ViLWNvbnNvbGUKc3BlYzoKICBzdHJhdGVneToKICAgIHJvbGxpbmdVcGRhdGU6CiAgICAgIG1heFN1cmdlOiAxCiAgICAgIG1heFVuYXZhaWxhYmxlOiAxCiAgICB0eXBlOiBSb2xsaW5nVXBkYXRlCiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgdGllcjogcHgtd2ViLWNvbnNvbGUKICByZXBsaWNhczogMQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICB0aWVyOiBweC13ZWItY29uc29sZQogICAgc3BlYzoKICAgICAgaW5pdENvbnRhaW5lcnM6CiAgICAgIC0gbmFtZTogY29uZmlnLWluaXQKICAgICAgICBpbWFnZTogInt7IHRlbXBsYXRlICJweC5nZXRrOHNJbWFnZXMiIC4gfX0vbGgtY29uZmlnLXN5bmM6MC4yIgogICAgICAgIGltYWdlUHVsbFBvbGljeTogQWx3YXlzCiAgICAgICAgYXJnczoKICAgICAgICAtICJpbml0IgogICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAtIG5hbWU6IGNvbmZpZwogICAgICAgICAgbW91bnRQYXRoOiAvY29uZmlnL2xoCiAgICAgIGNvbnRhaW5lcnM6CiAgICAgIC0gbmFtZTogcHgtbGlnaHRob3VzZQogICAgICAgIGltYWdlOiAie3sgdGVtcGxhdGUgInB4LmdldGs4c0ltYWdlcyIgLiB9fS9weC1saWdodGhvdXNlOnt7IHJlcXVpcmVkICJBIHZhbGlkIGxpZ2h0aG91c2UgaW1hZ2UgdmVyc2lvbiBpcyByZXF1aXJlZCIgLlZhbHVlcy5saWdodGhvdXNlVmVyc2lvbn19IgogICAgICAgIGltYWdlUHVsbFBvbGljeTogQWx3YXlzCiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBjb250YWluZXJQb3J0OiA4MAogICAgICAgIC0gY29udGFpbmVyUG9ydDogNDQzCiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgIC0gbmFtZTogY29uZmlnCiAgICAgICAgICBtb3VudFBhdGg6IC9jb25maWcvbGgKICAgICAgLSBuYW1lOiBjb25maWctc3luYwogICAgICAgIGltYWdlOiAie3sgdGVtcGxhdGUgInB4LmdldGs4c0ltYWdlcyIgLiB9fS9saC1jb25maWctc3luYzowLjIiCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBBbHdheXMKICAgICAgICBhcmdzOgogICAgICAgIC0gInN5bmMiCiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgIC0gbmFtZTogY29uZmlnCiAgICAgICAgICBtb3VudFBhdGg6IC9jb25maWcvbGgKICAgICAgc2VydmljZUFjY291bnROYW1lOiBweC1saC1hY2NvdW50CiAgICAgIHZvbHVtZXM6CiAgICAgIC0gbmFtZTogY29uZmlnCiAgICAgICAgZW1wdHlEaXI6IHt9Cnt7LSBlbmQgLX19',
    'portworx/templates/portworx-rbac-config.yaml':
        'Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlQWNjb3VudAptZXRhZGF0YToKICBuYW1lOiBweC1hY2NvdW50CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0KCmtpbmQ6IENsdXN0ZXJSb2xlCmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iIC4gfX0KbWV0YWRhdGE6CiAgIG5hbWU6IG5vZGUtZ2V0LXB1dC1saXN0LXJvbGUKcnVsZXM6Ci0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbIm5vZGVzIl0KICB2ZXJiczogWyJ3YXRjaCIsICJnZXQiLCAidXBkYXRlIiwgImxpc3QiXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJwb2RzIl0KICB2ZXJiczogWyJkZWxldGUiLCAiZ2V0IiwgImxpc3QiXQotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwgInBlcnNpc3RlbnR2b2x1bWVzIl0KICB2ZXJiczogWyJnZXQiLCAibGlzdCJdCi0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiXQogIHZlcmJzOiBbImdldCIsICJsaXN0IiwgInVwZGF0ZSIsICJjcmVhdGUiXQotIGFwaUdyb3VwczogWyJleHRlbnNpb25zIl0KICByZXNvdXJjZXM6IFsicG9kc2VjdXJpdHlwb2xpY2llcyJdCiAgcmVzb3VyY2VOYW1lczogWyJwcml2aWxlZ2VkIl0KICB2ZXJiczogWyJ1c2UiXQotLS0KCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiB7eyB0ZW1wbGF0ZSAicmJhYy5hcGlWZXJzaW9uIiAuIH19Cm1ldGFkYXRhOgogIG5hbWU6IG5vZGUtcm9sZS1iaW5kaW5nCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZTogcHgtYWNjb3VudAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IG5vZGUtZ2V0LXB1dC1saXN0LXJvbGUKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwo=',
    'portworx/templates/portworx-service.yaml':
        'a2luZDogU2VydmljZQphcGlWZXJzaW9uOiB2MQptZXRhZGF0YToKICBuYW1lOiBwb3J0d29yeC1zZXJ2aWNlCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGxhYmVsczoKICAgIG5hbWU6IHBvcnR3b3J4CnNwZWM6CiAgc2VsZWN0b3I6CiAgICBuYW1lOiBwb3J0d29yeAogIHBvcnRzOgogICAgLSBuYW1lOiBweC1hcGkKICAgICAgcHJvdG9jb2w6IFRDUAogICAgICBwb3J0OiA5MDAxCiAgICAgIHRhcmdldFBvcnQ6IDkwMDE=',
    'portworx/templates/portworx-storageclasses.yaml':
        'a2luZDogU3RvcmFnZUNsYXNzCmFwaVZlcnNpb246IHN0b3JhZ2UuazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogcG9ydHdvcngtZGItc2MKcHJvdmlzaW9uZXI6IGt1YmVybmV0ZXMuaW8vcG9ydHdvcngtdm9sdW1lCnBhcmFtZXRlcnM6CiAgcmVwbDogIjMiCiAgaW9fcHJvZmlsZTogImRiIgotLS0Ka2luZDogU3RvcmFnZUNsYXNzCmFwaVZlcnNpb246IHN0b3JhZ2UuazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogcG9ydHdvcngtZGIyLXNjCnByb3Zpc2lvbmVyOiBrdWJlcm5ldGVzLmlvL3BvcnR3b3J4LXZvbHVtZQpwYXJhbWV0ZXJzOgogICByZXBsOiAiMyIKICAgYmxvY2tfc2l6ZTogIjUxMmIiCiAgIGlvX3Byb2ZpbGU6ICJkYiIKLS0tCmtpbmQ6IFN0b3JhZ2VDbGFzcwphcGlWZXJzaW9uOiBzdG9yYWdlLms4cy5pby92MWJldGExCm1ldGFkYXRhOgogIG5hbWU6IHBvcnR3b3J4LXNoYXJlZC1zYwpwcm92aXNpb25lcjoga3ViZXJuZXRlcy5pby9wb3J0d29yeC12b2x1bWUKcGFyYW1ldGVyczoKICAgcmVwbDogIjMiCiAgIHNoYXJlZDogInRydWUiCi0tLQojCiMgTlVMTCBTdG9yYWdlQ2xhc3MgdGhhdCBkb2N1bWVudHMgYWxsIHBvc3NpYmxlCiMgUG9ydHdvcnggU3RvcmFnZUNsYXNzIHBhcmFtZXRlcnMKIwojIFBsZWFzZSByZWZlciB0byA6IGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvZHluYW1pYy1wcm92aXNpb25pbmcuaHRtbAojCmtpbmQ6IFN0b3JhZ2VDbGFzcwphcGlWZXJzaW9uOiBzdG9yYWdlLms4cy5pby92MWJldGExCm1ldGFkYXRhOgogIG5hbWU6IHBvcnR3b3J4LW51bGwtc2MKICBhbm5vdGF0aW9uczoKICAgICAgIHBhcmFtcy9kb2NzOiAgJ2h0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvZHluYW1pYy1wcm92aXNpb25pbmcuaHRtbCcKICAgICAgIHBhcmFtcy9mczogICJGaWxlc3lzdGVtIHRvIGJlIGxhaWQgb3V0OiBub25lfHhmc3xleHQ0ICIKICAgICAgIHBhcmFtcy9ibG9ja19zaXplOiAiQmxvY2sgc2l6ZSIKICAgICAgIHBhcmFtcy9yZXBsOiAgICAgICAgIlJlcGxpY2F0aW9uIGZhY3RvciBmb3IgdGhlIHZvbHVtZTogMXwyfDMiCiAgICAgICBwYXJhbXMvc2hhcmVkOiAgICAgIkZsYWcgdG8gY3JlYXRlIGEgZ2xvYmFsbHkgc2hhcmVkIG5hbWVzcGFjZSB2b2x1bWUgd2hpY2ggY2FuIGJlIHVzZWQgYnkgbXVsdGlwbGUgcG9kcyA6IHRydWV8ZmFsc2UiCiAgICAgICBwYXJhbXMvcHJpb3JpdHlfaW86ICJJTyBQcmlvcml0eTogbG93fG1lZGl1bXxoaWdoIgogICAgICAgcGFyYW1zL2lvX3Byb2ZpbGU6ICAiSU8gUHJvZmlsZSBjYW4gYmUgdXNlZCB0byBvdmVycmlkZSB0aGUgSS9PIGFsZ29yaXRobSBQb3J0d29yeCB1c2VzIGZvciB0aGUgdm9sdW1lcy4gU3VwcG9ydGVkIHZhbHVlcyBhcmUgW2RiXSgvbWFpbnRhaW4vcGVyZm9ybWFuY2UvdHVuaW5nLmh0bWwjZGIpLCBbc2VxdWVudGlhbF0oL21haW50YWluL3BlcmZvcm1hbmNlL3R1bmluZy5odG1sI3NlcXVlbnRpYWwpLCBbcmFuZG9tXSgvbWFpbnRhaW4vcGVyZm9ybWFuY2UvdHVuaW5nLmh0bWwjcmFuZG9tKSwgW2Ntc10oL21haW50YWluL3BlcmZvcm1hbmNlL3R1bmluZy5odG1sI2NtcykiCiAgICAgICBwYXJhbXMvZ3JvdXA6ICAgICAgICJUaGUgZ3JvdXAgYSB2b2x1bWUgc2hvdWxkIGJlbG9uZyB0b28uIFBvcnR3b3J4IHdpbGwgcmVzdHJpY3QgcmVwbGljYXRpb24gc2V0cyBvZiB2b2x1bWVzIG9mIHRoZSBzYW1lIGdyb3VwIG9uIGRpZmZlcmVudCBub2Rlcy4gSWYgdGhlIGZvcmNlIGdyb3VwIG9wdGlvbiAnZmcnIGlzIHNldCB0byB0cnVlLCB0aGUgdm9sdW1lIGdyb3VwIHJ1bGUgd2lsbCBiZSBzdHJpY3RseSBlbmZvcmNlZC4gQnkgZGVmYXVsdCwgaXQncyBub3Qgc3RyaWN0bHkgZW5mb3JjZWQuIgogICAgICAgcGFyYW1zL2ZnOiAgICAgICAgICAiVGhpcyBvcHRpb24gZW5mb3JjZXMgdm9sdW1lIGdyb3VwIHBvbGljeS4gSWYgYSB2b2x1bWUgYmVsb25naW5nIHRvIGEgZ3JvdXAgY2Fubm90IGZpbmQgbm9kZXMgZm9yIGl0J3MgcmVwbGljYXRpb24gc2V0cyB3aGljaCBkb24ndCBoYXZlIG90aGVyIHZvbHVtZXMgb2Ygc2FtZSBncm91cCwgdGhlIHZvbHVtZSBjcmVhdGlvbiB3aWxsIGZhaWwuIgogICAgICAgcGFyYW1zL2xhYmVsOiAgICAgICAiTGlzdCBvZiBjb21tYS1zZXBhcmF0ZWQgbmFtZT12YWx1ZSBwYWlycyB0byBhcHBseSB0byB0aGUgUG9ydHdvcnggdm9sdW1lIgogICAgICAgcGFyYW1zL25vZGVzOiAgICAgICAiQ29tbWEtc2VwYXJhdGVkIFBvcnR3b3J4IE5vZGUgSUQncyB0byB1c2UgZm9yIHJlcGxpY2F0aW9uIHNldHMgb2YgdGhlIHZvbHVtZSIKICAgICAgIHBhcmFtcy9hZ2dyZWdhdGlvbl9sZXZlbDogICAgICJTcGVjaWZpZXMgdGhlIG51bWJlciBvZiByZXBsaWNhdGlvbiBzZXRzIHRoZSB2b2x1bWUgY2FuIGJlIGFnZ3JlZ2F0ZWQgZnJvbSIKICAgICAgIHBhcmFtcy9zbmFwX3NjaGVkdWxlOiAgICAgIlNuYXBzaG90IHNjaGVkdWxlLiBGb2xsb3dpbmcgYXJlIHRoZSBhY2NlcHRlZCBmb3JtYXRzOiAgcGVyaW9kaWM9X21pbnNfLF9zbmFwcy10by1rZWVwXyBkYWlseT1faGg6bW1fLF9zbmFwcy10by1rZWVwXyB3ZWVrbHk9X3dlZWtkYXlAaGg6bW1fLF9zbmFwcy10by1rZWVwXyAgbW9udGhseT1fZGF5QGhoOm1tXyxfc25hcHMtdG8ta2VlcF8gX3NuYXBzLXRvLWtlZXBfIGlzIG9wdGlvbmFsLiBQZXJpb2RpYywgRGFpbHksIFdlZWtseSBhbmQgTW9udGhseSBrZWVwIGxhc3QgNSwgNywgNSBhbmQgMTIgc25hcHNob3RzIGJ5IGRlZmF1bHQgcmVzcGVjdGl2ZWx5IgogICAgICAgcGFyYW1zL3N0aWNreTogICAgICAgICAiRmxhZyB0byBjcmVhdGUgc3RpY2t5IHZvbHVtZXMgdGhhdCBjYW5ub3QgYmUgZGVsZXRlZCB1bnRpbCB0aGUgZmxhZyBpcyBkaXNhYmxlZCIKICAgICAgIHBhcmFtcy9qb3VybmFsOiAgICAgICAgICJGbGFnIHRvIGluZGljYXRlIGlmIHlvdSB3YW50IHRvIHVzZSBqb3VybmFsIGRldmljZSBmb3IgdGhlIHZvbHVtZSdzIG1ldGFkYXRhLiBUaGlzIHdpbGwgdXNlIHRoZSBqb3VybmFsIGRldmljZSB0aGF0IHlvdSB1c2VkIHdoZW4gaW5zdGFsbGluZyBQb3J0d29yeC4gQXMgb2YgUFggdmVyc2lvbiAxLjMsIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSBhIGpvdXJuYWwgZGV2aWNlIHRvIGFic29yYiBQWCBtZXRhZGF0YSB3cml0ZXMiCnByb3Zpc2lvbmVyOiBrdWJlcm5ldGVzLmlvL3BvcnR3b3J4LXZvbHVtZQpwYXJhbWV0ZXJzOgo=',
    'portworx/templates/portworx-stork.yaml':
        '',
    'portworx/templates/serviceaccount-hook.yaml':
        'e3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnQuaG9vay5jcmVhdGUgfX0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToge3sgdGVtcGxhdGUgInB4Lmhvb2tTZXJ2aWNlQWNjb3VudCIgLiB9fQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBhbm5vdGF0aW9uczoKICAgICJoZWxtLnNoL2hvb2stZGVsZXRlLXBvbGljeSI6IGJlZm9yZS1ob29rLWNyZWF0aW9uCiAgICAiaGVsbS5zaC9ob29rIjogInByZS1pbnN0YWxsLHByZS1kZWxldGUscG9zdC1kZWxldGUiCiAgbGFiZWxzOgogICAgaGVyaXRhZ2U6IHt7IC5SZWxlYXNlLlNlcnZpY2UgfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnk6IHt7LlJlbGVhc2UuU2VydmljZSB8IHF1b3RlIH19CiAgICBhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZToge3suUmVsZWFzZS5OYW1lIHwgcXVvdGUgfX0KICAgIGNoYXJ0OiAie3suQ2hhcnQuTmFtZX19LXt7LkNoYXJ0LlZlcnNpb259fSIKLS0tCmtpbmQ6IENsdXN0ZXJSb2xlCmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iIC4gfX0KbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICAiaGVsbS5zaC9ob29rLWRlbGV0ZS1wb2xpY3kiOiBiZWZvcmUtaG9vay1jcmVhdGlvbgogICAgImhlbG0uc2gvaG9vayI6ICJwcmUtaW5zdGFsbCxwcmUtZGVsZXRlLHBvc3QtZGVsZXRlIgogIG5hbWU6IHt7IHRlbXBsYXRlICJweC5ob29rQ2x1c3RlclJvbGUiIC4gfX0KcnVsZXM6Ci0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbIm5vZGVzIl0KICB2ZXJiczogWyJwYXRjaCIsICJnZXQiLCAidXBkYXRlIiwgImxpc3QiXQotLS0Ka2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iIC4gfX0KbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICAiaGVsbS5zaC9ob29rLWRlbGV0ZS1wb2xpY3kiOiBiZWZvcmUtaG9vay1jcmVhdGlvbgogICAgImhlbG0uc2gvaG9vayI6ICJwcmUtaW5zdGFsbCxwcmUtZGVsZXRlLHBvc3QtZGVsZXRlIgogIG5hbWU6IHt7IHRlbXBsYXRlICJweC5ob29rQ2x1c3RlclJvbGVCaW5kaW5nIiAuIH19CnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToge3sgdGVtcGxhdGUgInB4Lmhvb2tTZXJ2aWNlQWNjb3VudCIgLiB9fQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHt7IHRlbXBsYXRlICJweC5ob29rQ2x1c3RlclJvbGUiIC4gfX0KICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwp7ey0gZW5kIH19Cg==',
    'portworx/values.yaml':
        'IyBQbGVhc2UgdW5jb21tZW50IGFuZCBzcGVjaWZ5IHZhbHVlcyBmb3IgdGhlc2Ugb3B0aW9ucyBhcyBwZXIgeW91ciByZXF1aXJlbWVudHMuCmRyaXZlczogbm9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgIyBOT1RFOiBUaGlzIGlzIGEgIjsiIHNlcGVyYXRlZCBsaXN0IG9mIGRyaXZlcy4gRm9yIGVnOiAiL2Rldi9zZGE7L2Rldi9zZGI7L2Rldi9zZGMiIERlZmF1bHRzIHRvIHVzZSAtQSBzd2l0Y2guCnVzZWZpbGVTeXN0ZW1Ecml2ZTogZmFsc2UgICAgICAgICAgICAgIyB0cnVlL2ZhbHNlIEluc3RydWN0cyBQWCB0byB1c2UgYW4gdW5tb3VudGVkIERyaXZlIGV2ZW4gaWYgaXQgaGFzIGEgZmlsZXN5c3RlbS4KdXNlZHJpdmVzQW5kUGFydGl0aW9uczogZmFsc2UgICAgICAgICAjIERlZmF1bHRzIHRvIGZhbHNlLiBDaGFuZ2UgdG8gdHJ1ZSBhbmQgUFggd2lsbCB1c2UgdW5tb3VudGVkIGRyaXZlcyBhbmQgcGFydGl0aW9ucy4Kam91cm5hbERldmljZToKCmt2ZGI6CmludGVybmFsS1ZEQjogZmFsc2UgICAgICAgICAgICAgICAgICAgIyBpbnRlcm5hbCBLVkRCCmV0Y2Q6CiAgY3JlZGVudGlhbHM6IG5vbmU6bm9uZSAgICAgICAgICAgICAgIyBVc2VybmFtZSBhbmQgcGFzc3dvcmQgZm9yIEVUQ0QgYXV0aGVudGljYXRpb24gaW4gdGhlIGZvcm0gdXNlcjpwYXNzd29yZAogIGNhOiBub25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgTmFtZSBvZiBDQSBmaWxlIGZvciBFVENEIGF1dGhlbnRpY2F0aW9uLiBzZXJ2ZXIuY2EKICBjZXJ0OiBub25lICAgICAgICAgICAgICAgICAgICAgICAgICAjIE5hbWUgb2YgY2VydGlmaWNhdGUgZm9yIEVUQ0QgYXV0aGVudGljYXRpb24uIFNob3VsZCBiZSBzZXJ2ZXIuY3J0CiAga2V5OiBub25lICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBOYW1lIG9mIGNlcnRpZmljYXRlIGtleSBmb3IgRVRDRCBhdXRoZW50aWNhdGlvbiBTaG91bGQgYmUgc2VydmVyLmtleQpjb25zdWw6CiAgdG9rZW46IG5vbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAjIEFDTCB0b2tlbiB2YWx1ZSB1c2VkIGZvciBDb25zdWwgYXV0aGVudGljYXRpb24uIChleGFtcGxlOiAzOTgwNzNhOC01MDkxLTRkOWMtODcxYS1iYmJlYjAzMGQxZjYpCgpkYXRhSW50ZXJmYWNlOiBub25lICAgICAgICAgICAgICAgICAgICMgTmFtZSBvZiB0aGUgaW50ZXJmYWNlIDxldGhYPgptYW5hZ2VtZW50SW50ZXJmYWNlOiBub25lICAgICAgICAgICAgICMgTmFtZSBvZiB0aGUgaW50ZXJmYWNlIDxldGhYPgoKaXNUYXJnZXRPU0NvcmVPUzogZmFsc2UgICAgICAgICAgICAgICAgICMgSXMgeW91ciB0YXJnZXQgT1MgQ29yZU9TPyBEZWZhdWx0cyB0byBmYWxzZS4KcGtzSW5zdGFsbDogZmFsc2UgICAgICAgICAgICAgICAgICAgICAgICMgaW5zdGFsbGF0aW9uIG9uIFBLUyAoUGl2b3RhbCBDb250YWluZXIgU2VydmljZSkKQUtTb3JFS1NJbnN0YWxsOiBmYWxzZSAgICAgICAgICAgICAgICAgICMgaW5zdGFsbGF0aW9uIG9uIEFLUyBvciBFS1MuCgpjdXN0b21SZWdpc3RyeVVSTDoKcmVnaXN0cnlTZWNyZXQ6CgpjbHVzdGVyTmFtZTogbXljbHVzdGVyICAgICAgICAgICAgICAgICMgVGhpcyBpcyB0aGUgZGVmYXVsdC4gcGxlYXNlIGNoYW5nZSBpdCB0byB5b3VyIGNsdXN0ZXIgbmFtZS4Kc2VjcmV0VHlwZTogbm9uZSAgICAgICAgICAgICAgICAgICAgICAjIERlZmF1bHRzIHRvIE5vbmUsIGJ1dCBjYW4gYmUgQVdTIC8gS1ZEQiAvIFZhdWx0LgplbnZWYXJzOiBub25lICAgICAgICAgICAgICAgICAgICAgICAgICMgTk9URTogVGhpcyBpcyBhICI7IiBzZXBlcmF0ZWQgbGlzdCBvZiBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIEZvciBlZzogTVlFTlYxPW15dmFsdWUxO01ZRU5WMj1teXZhbHVlMgpzdG9yazogdHJ1ZSAgICAgICAgICAgICAgICAgICAgICAgICAgICMgVXNlIFN0b3JrIGh0dHBzOi8vZG9jcy5wb3J0d29yeC5jb20vc2NoZWR1bGVyL2t1YmVybmV0ZXMvc3RvcmsuaHRtbCBmb3IgaHlwZXJjb252ZXJnZW5jZS4Kc3RvcmtWZXJzaW9uOiAxLjIuMAoKbGlnaHRob3VzZTogZmFsc2UKbGlnaHRob3VzZVZlcnNpb246IDEuNC4wCgpkZXBsb3lPbk1hc3RlcjogZmFsc2UgICAgICAgICAgICAgICAjIEZvciBQT0Mgb25seQpjc2k6IGZhbHNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgRW5hYmxlIENTSQoKc2VydmljZUFjY291bnQ6CiAgaG9vazoKICAgIGNyZWF0ZTogdHJ1ZQogICAgbmFtZToKCmRlcGxveW1lbnRUeXBlOiBvY2kgICAgICAgICAgICAgICAgICAgICAjIGFjY2VwdHMgIm9jaSIgb3IgImRvY2tlciIKaW1hZ2VUeXBlOiBub25lICAgICAgICAgICAgICAgICAgICAgICAgICMKaW1hZ2VWZXJzaW9uOiAxLjUuMSAgICAgICAgICAgICAgICAgICMgVmVyc2lvbiBvZiB0aGUgUFggSW1hZ2UuCg=='
  },
  kubeVersion: null,
  labels: {
    'catalog.cattle.io/template_name': 'library-portworx',
    'cattle.io/creator': 'norman'
  },
  name: 'library-portworx-1.0.0',
  ownerReferences: null,
  questions: [
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Select if you wish to run internal kvdb. Note internal kvdb is in beta. DO NOT enable internal kvdb when running with KOPS. The kvdb endpoints provided above will be ignored.',
      group: 'Key value store parameters (Required)',
      invalidChars: null,
      label: 'Enable Internal KVDB store',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'internalKVDB',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Points to your key value store, such as an etcd cluster or a consul cluster. Use semicolon separated for multiple endpoints. (example: etcd:http://etcd-1.com.net:2379;etcd:http://etcd-2.com.net:2379;etcd:http://etcd-3.com.net:2379)',
      group: 'Key value store parameters (Required)',
      invalidChars: null,
      label: 'Endpoint address',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: true,
      showIf: 'internalKVDB=false',
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'kvdb',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Name of CA file for ETCD authentication. Example: etcd-ca.crt. Follow https://docs.portworx.com/scheduler/kubernetes/etcd-certs-using-secrets.html to create a Kubernetes secret for the etcd certs.',
      group: 'Key value store security Parameters',
      invalidChars: null,
      label: 'ETCD CA file',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: 'internalKVDB=false',
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'etcd.ca',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Name of certificate for ETCD authentication. Example: etcd.crt',
      group: 'Key value store security Parameters',
      invalidChars: null,
      label: 'ETCD cert file',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: 'internalKVDB=false',
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'etcd.cert',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Name of certificate key for ETCD authentication Example: etcd.key',
      group: 'Key value store security Parameters',
      invalidChars: null,
      label: 'ETCD cert key file',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: 'internalKVDB=false',
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'etcd.key',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Username and password for ETCD authentication in the form user:password. Not needed if using certificates.',
      group: 'Key value store security Parameters',
      invalidChars: null,
      label: 'ETCD credentials',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: 'internalKVDB=false',
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'etcd.credentials',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'ACL token value used for Consul authentication. (example: 398073a8-5091-4d9c-871a-bbbeb030d1f6). Needed only for consul.',
      group: 'Key value store security Parameters',
      invalidChars: null,
      label: 'Consul ACL Token',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: 'internalKVDB=false',
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'consul.acl',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          "This is a ';' seperated list of drives. For eg: '/dev/sda;/dev/sdb;/dev/sdc'. If left empty, Portworx will try to use available drives.",
      group: 'Storage Parameters',
      invalidChars: null,
      label: 'Drives',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'drives',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Instructs PX to use drives with a filesystem.',
      group: 'Storage Parameters',
      invalidChars: null,
      label: 'Use drives with a filesystem.',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'usefileSystemDrive',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Instructs PX to use unmounted drives and partitions.',
      group: 'Storage Parameters',
      invalidChars: null,
      label: 'Use unmounted drives and partitions',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'usedrivesAndPartitions',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          "This allows PX to create it’s own journal partition on the best drive to absorb PX metadata writes. Journal writes are small with frequent syncs and hence a separate journal partition will enable better performance. Use value 'auto' if you want Portworx to create it's own journal partition.",
      group: 'Storage Parameters',
      invalidChars: null,
      label: 'Journal Device',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'journalDevice',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Specify data network interface. This is useful if your instances have non-standard network interfaces. (example: eth1). By default, Portworx will select the first routable interface.',
      group: 'Network Parameters',
      invalidChars: null,
      label: 'Data Network Interface',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'dataInterface',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Specify management network interface. This is useful if your instances have non-standard network interfaces. (example: eth1). By default, Portworx will select the first routable interface.<Paste>',
      group: 'Network Parameters',
      invalidChars: null,
      label: 'Management Network Interface',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'managementInterface',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Select if installing on Pivotal Container service.',
      group: 'Platform Parameters',
      invalidChars: null,
      label: 'Installing on Pivotal Container Service (PKS)',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'pksInstall',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Select if installing on Amazon Elastic Container Service for Kubernetes (EKS) or Azure Kubernetes Service (AKS).',
      group: 'Platform Parameters',
      invalidChars: null,
      label: 'Installing on AKS or EKS',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'AKSorEKSInstall',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Select if installing on CoreOS',
      group: 'Platform Parameters',
      invalidChars: null,
      label: 'Installing on CoreOS',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'isTargetOSCoreOS',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Specify a custom Kubernetes secret that will be used to authenticate with a container registry. Must be defined in kube-system namespace. (example: regcred)',
      group: 'Container Registry Parameters',
      invalidChars: null,
      label: 'Registry Kubernetes Secret',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'registrySecret',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Specify a custom container registry server (including repository) that will be used instead of index.docker.io to download Docker images. (example: dockerhub.acme.net:5443 or myregistry.com/myrepository/)',
      group: 'Container Registry Parameters',
      invalidChars: null,
      label: 'Custom Registry URL',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'customRegistryURL',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Select if you want to enable CSI (Container Storage Interface). CSI is still in ALPHA.',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Enable CSI',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'csi',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'Storage Orchestration Runtime for Kubernetes (STORK) is a scheduler plugin that provides hyper-convergence, snapshots and storage-aware scheduling (recommended).',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Install Stork',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'stork',
      default: 'true'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Version of Stork to be used',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Stork version',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'storkVersion',
      default: '1.2.0'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Select if you want to install Portworx Lighthouse GUI.',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Lighthouse',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'boolean',
      validChars: null,
      variable: 'lighthouse',
      default: 'false'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Version of the Lighthouse GUI to be used',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Lighthouse version',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'lighthouseVersion',
      default: '1.4.0'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description:
          'semi-colon-separated list of environment variables that will be exported to portworx. (example: API_SERVER=http://lighthouse-new.portworx.com;MYENV1=val1;MYENV2=val2)',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Environment variables',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'envVars',
      default: null
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'The Portworx image version to be used while deploying',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Portworx version to be deployed.',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'imageVersion',
      default: '1.5.1'
    },
    {
      errCode: 0,
      errMsg: null,
      hash: null,
      id: null,
      description: 'Name of the Portworx Cluster',
      group: 'Advanced parameters',
      invalidChars: null,
      label: 'Portworx cluster name',
      max: 0,
      maxLength: 0,
      min: 0,
      minLength: 0,
      options: null,
      required: false,
      showIf: null,
      showSubquestionIf: null,
      subquestions: null,
      type: 'string',
      validChars: null,
      variable: 'clusterName',
      default: 'mycluster'
    }
  ],
  rancherVersion: null,
  readme: null,
  removed: null,
  requiredNamespace: 'kube-system',
  state: 'active',
  status: { errCode: 0, errMsg: null, hash: null, id: null },
  transitioning: 'no',
  transitioningMessage: '',
  upgradeVersionLinks: null,
  uuid: '02b40393-21fb-11e9-a206-0242ac110002',
  version: '1.0.0'
}

export default portworxConfig
